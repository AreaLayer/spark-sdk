// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field
// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'frb_generated.io.dart' if (dart.library.js_interop) 'frb_generated.web.dart';
import 'lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'third_party/breez_sdk_common/breez_server.dart';
import 'third_party/breez_sdk_common/error.dart';
import 'third_party/breez_sdk_common/fiat.dart';
import 'third_party/breez_sdk_common/input.dart';
import 'third_party/breez_sdk_common/lnurl/pay.dart';
import 'third_party/breez_sdk_common/network.dart';
import 'third_party/breez_sdk_common/rest/rest_client.dart';
import 'third_party/breez_sdk_spark.dart';
import 'third_party/breez_sdk_spark/chain.dart';
import 'third_party/breez_sdk_spark/chain/rest_client.dart';
import 'third_party/breez_sdk_spark/models.dart';
import 'third_party/breez_sdk_spark/persist.dart';
import 'third_party/breez_sdk_spark/persist/sqlite.dart';
part 'frb_generated.freezed.dart';

/// Main entrypoint of the Rust API
class BreezSpark extends BaseEntrypoint<BreezSparkApi, BreezSparkApiImpl, BreezSparkWire> {
  @internal
  static final instance = BreezSpark._();

  BreezSpark._();

  /// Initialize flutter_rust_bridge
  static Future<void> init({
    BreezSparkApi? api,
    BaseHandler? handler,
    ExternalLibrary? externalLibrary,
  }) async {
    await instance.initImpl(api: api, handler: handler, externalLibrary: externalLibrary);
  }

  /// Initialize flutter_rust_bridge in mock mode.
  /// No libraries for FFI are loaded.
  static void initMock({required BreezSparkApi api}) {
    instance.initMockImpl(api: api);
  }

  /// Dispose flutter_rust_bridge
  ///
  /// The call to this function is optional, since flutter_rust_bridge (and everything else)
  /// is automatically disposed when the app stops.
  static void dispose() => instance.disposeImpl();

  @override
  ApiImplConstructor<BreezSparkApiImpl, BreezSparkWire> get apiImplConstructor => BreezSparkApiImpl.new;

  @override
  WireConstructor<BreezSparkWire> get wireConstructor => BreezSparkWire.fromExternalLibrary;

  @override
  Future<void> executeRustInitializers() async {}

  @override
  ExternalLibraryLoaderConfig get defaultExternalLibraryLoaderConfig => kDefaultExternalLibraryLoaderConfig;

  @override
  String get codegenVersion => '2.9.0';

  @override
  int get rustContentHash => 1420320862;

  static const kDefaultExternalLibraryLoaderConfig = ExternalLibraryLoaderConfig(
    stem: 'breez_sdk_spark',
    ioDirectory: 'rust/target/release/',
    webPrefix: 'pkg/',
  );
}

abstract class BreezSparkApi extends BaseApi {
  Future<BasicAuth> breezSdkSparkChainRestClientBasicAuthNew({
    required String username,
    required String password,
  });

  Future<ClaimDepositResponse> breezSdkSparkBreezSdkClaimDeposit({
    required BreezSdk that,
    required ClaimDepositRequest request,
  });

  Future<void> breezSdkSparkBreezSdkDisconnect({required BreezSdk that});

  Stream<SdkEvent> breezSdkSparkBreezSdkFrbOverrideAddEventListener({required BreezSdk that});

  Future<GetInfoResponse> breezSdkSparkBreezSdkGetInfo({
    required BreezSdk that,
    required GetInfoRequest request,
  });

  Future<GetPaymentResponse> breezSdkSparkBreezSdkGetPayment({
    required BreezSdk that,
    required GetPaymentRequest request,
  });

  Future<ListPaymentsResponse> breezSdkSparkBreezSdkListPayments({
    required BreezSdk that,
    required ListPaymentsRequest request,
  });

  Future<ListUnclaimedDepositsResponse> breezSdkSparkBreezSdkListUnclaimedDeposits({
    required BreezSdk that,
    required ListUnclaimedDepositsRequest request,
  });

  Future<LnurlPayResponse> breezSdkSparkBreezSdkLnurlPay({
    required BreezSdk that,
    required LnurlPayRequest request,
  });

  Future<PrepareLnurlPayResponse> breezSdkSparkBreezSdkPrepareLnurlPay({
    required BreezSdk that,
    required PrepareLnurlPayRequest request,
  });

  Future<PrepareSendPaymentResponse> breezSdkSparkBreezSdkPrepareSendPayment({
    required BreezSdk that,
    required PrepareSendPaymentRequest request,
  });

  Future<ReceivePaymentResponse> breezSdkSparkBreezSdkReceivePayment({
    required BreezSdk that,
    required ReceivePaymentRequest request,
  });

  Future<RefundDepositResponse> breezSdkSparkBreezSdkRefundDeposit({
    required BreezSdk that,
    required RefundDepositRequest request,
  });

  Future<bool> breezSdkSparkBreezSdkRemoveEventListener({required BreezSdk that, required String id});

  Future<SendPaymentResponse> breezSdkSparkBreezSdkSendPayment({
    required BreezSdk that,
    required SendPaymentRequest request,
  });

  Future<SyncWalletResponse> breezSdkSparkBreezSdkSyncWallet({
    required BreezSdk that,
    required SyncWalletRequest request,
  });

  Future<PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait>
  breezSdkCommonBreezServerBreezServerFetchFiatCurrencies({required BreezServer that});

  Future<PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait>
  breezSdkCommonBreezServerBreezServerFetchFiatRates({required BreezServer that});

  Future<String> breezSdkSparkEventEmitterAddListener({
    required EventEmitter that,
    required EventListener listener,
  });

  Future<EventEmitter> breezSdkSparkEventEmitterDefault();

  Future<void> breezSdkSparkEventEmitterEmit({required EventEmitter that, required SdkEvent event});

  Future<EventEmitter> breezSdkSparkEventEmitterNew();

  Future<bool> breezSdkSparkEventEmitterRemoveListener({required EventEmitter that, required String id});

  Future<BigInt> breezSdkSparkModelsFeeToSats({required Fee that, required BigInt vbytes});

  BigInt breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetAmountSats({
    required PrepareSendPaymentResponse that,
  });

  SendPaymentMethod breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetPaymentMethod({
    required PrepareSendPaymentResponse that,
  });

  void breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetAmountSats({
    required PrepareSendPaymentResponse that,
    required BigInt amountSats,
  });

  void breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetPaymentMethod({
    required PrepareSendPaymentResponse that,
    required SendPaymentMethod paymentMethod,
  });

  ReceivePaymentMethod breezSdkSparkModelsReceivePaymentRequestAutoAccessorGetPaymentMethod({
    required ReceivePaymentRequest that,
  });

  void breezSdkSparkModelsReceivePaymentRequestAutoAccessorSetPaymentMethod({
    required ReceivePaymentRequest that,
    required ReceivePaymentMethod paymentMethod,
  });

  String breezSdkSparkModelsRefundDepositRequestAutoAccessorGetDestinationAddress({
    required RefundDepositRequest that,
  });

  Fee breezSdkSparkModelsRefundDepositRequestAutoAccessorGetFee({required RefundDepositRequest that});

  String breezSdkSparkModelsRefundDepositRequestAutoAccessorGetTxid({required RefundDepositRequest that});

  int breezSdkSparkModelsRefundDepositRequestAutoAccessorGetVout({required RefundDepositRequest that});

  void breezSdkSparkModelsRefundDepositRequestAutoAccessorSetDestinationAddress({
    required RefundDepositRequest that,
    required String destinationAddress,
  });

  void breezSdkSparkModelsRefundDepositRequestAutoAccessorSetFee({
    required RefundDepositRequest that,
    required Fee fee,
  });

  void breezSdkSparkModelsRefundDepositRequestAutoAccessorSetTxid({
    required RefundDepositRequest that,
    required String txid,
  });

  void breezSdkSparkModelsRefundDepositRequestAutoAccessorSetVout({
    required RefundDepositRequest that,
    required int vout,
  });

  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait>
  breezSdkCommonRestRestClientReqwestRestClientGet({
    required ReqwestRestClient that,
    required String url,
    Map<String, String>? headers,
  });

  Future<ReqwestRestClient> breezSdkCommonRestRestClientReqwestRestClientNew();

  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait>
  breezSdkCommonRestRestClientReqwestRestClientPost({
    required ReqwestRestClient that,
    required String url,
    Map<String, String>? headers,
    String? body,
  });

  Future<PinBoxFutureOutputResultChainServiceErrorAsyncTrait>
  breezSdkSparkChainRestClientRestClientChainServiceBroadcastTransaction({
    required RestClientChainService that,
    required String tx,
  });

  Future<PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait>
  breezSdkSparkChainRestClientRestClientChainServiceGetAddressUtxos({
    required RestClientChainService that,
    required String address,
  });

  Future<PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait>
  breezSdkSparkChainRestClientRestClientChainServiceGetTransactionHex({
    required RestClientChainService that,
    required String txid,
  });

  Future<RestClientChainService> breezSdkSparkChainRestClientRestClientChainServiceNew({
    required String baseUrl,
    required Network network,
    required BigInt maxRetries,
    required RestClient restClient,
    BasicAuth? basicAuth,
  });

  Future<BreezSdk> breezSdkSparkSdkBuilderBuild({required SdkBuilder that});

  Future<SdkBuilder> breezSdkSparkSdkBuilderNew({
    required Config config,
    required String mnemonic,
    required ArcStorage storage,
  });

  SendPaymentOptions? breezSdkSparkModelsSendPaymentRequestAutoAccessorGetOptions({
    required SendPaymentRequest that,
  });

  PrepareSendPaymentResponse breezSdkSparkModelsSendPaymentRequestAutoAccessorGetPrepareResponse({
    required SendPaymentRequest that,
  });

  void breezSdkSparkModelsSendPaymentRequestAutoAccessorSetOptions({
    required SendPaymentRequest that,
    SendPaymentOptions? options,
  });

  void breezSdkSparkModelsSendPaymentRequestAutoAccessorSetPrepareResponse({
    required SendPaymentRequest that,
    required PrepareSendPaymentResponse prepareResponse,
  });

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageAddDeposit({
    required SqliteStorage that,
    required String txid,
    required int vout,
    required BigInt amountSats,
  });

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageDeleteDeposit({
    required SqliteStorage that,
    required String txid,
    required int vout,
  });

  Future<PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait> breezSdkSparkSqliteStorageGetCachedItem({
    required SqliteStorage that,
    required String key,
  });

  Future<PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait> breezSdkSparkSqliteStorageGetPaymentById({
    required SqliteStorage that,
    required String id,
  });

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageInsertPayment({
    required SqliteStorage that,
    required Payment payment,
  });

  Future<PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait>
  breezSdkSparkSqliteStorageListDeposits({required SqliteStorage that});

  Future<PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait> breezSdkSparkSqliteStorageListPayments({
    required SqliteStorage that,
    int? offset,
    int? limit,
  });

  Future<SqliteStorage> breezSdkSparkSqliteStorageNew({required Path path});

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageSetCachedItem({
    required SqliteStorage that,
    required String key,
    required String value,
  });

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageSetPaymentMetadata({
    required SqliteStorage that,
    required String paymentId,
    required PaymentMetadata metadata,
  });

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageUpdateDeposit({
    required SqliteStorage that,
    required String txid,
    required int vout,
    required UpdateDepositPayload payload,
  });

  Future<void> crateBindingEventListenerOnEvent({required BindingEventListener that, required SdkEvent e});

  Future<void> crateBindingLoggerLog({required BindingLogger that, required LogEntry l});

  Future<Bip21Details> breezSdkCommonInputBip21DetailsDefault();

  Future<Bip21Extra> breezSdkCommonInputBip21ExtraDefault();

  Future<Bolt11RouteHint> breezSdkCommonInputBolt11RouteHintDefault();

  Future<Bolt11RouteHintHop> breezSdkCommonInputBolt11RouteHintHopDefault();

  Future<BreezSdk> breezSdkSparkConnect({required ConnectRequest request});

  Future<Config> breezSdkSparkDefaultConfig({required Network network});

  Future<ArcStorage> breezSdkSparkDefaultStorage({required String dataDir});

  Future<void> breezSdkSparkInitLogging({String? logDir, Logger? appLogger, String? logFilter});

  Future<LnurlPayInfo> breezSdkSparkModelsLnurlPayInfoDefault();

  Future<InputType> breezSdkCommonInputParse({required String input});

  Future<InputType> breezSdkSparkParse({required String input});

  Future<Bolt11InvoiceDetails?> breezSdkCommonInputParseInvoice({required String input});

  Future<PaymentRequestSource> breezSdkCommonInputPaymentRequestSourceDefault();

  Future<BigInt> breezSdkSparkModelsSendOnchainSpeedFeeQuoteTotalFeeSat({
    required SendOnchainSpeedFeeQuote that,
  });

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ArcStorage;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ArcStorage;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ArcStoragePtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BasicAuth;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BasicAuth;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_BasicAuthPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BindingEventListener;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BindingEventListener;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_BindingEventListenerPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BindingLogger;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BindingLogger;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_BindingLoggerPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BreezSdk;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BreezSdk;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_BreezSdkPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BreezServer;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BreezServer;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_BreezServerPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_DepositClaimError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_DepositClaimError;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_DepositClaimErrorPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_EventEmitter;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_EventEmitter;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_EventEmitterPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Fee;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Fee;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_FeePtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_InputType;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_InputType;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_InputTypePtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ParseError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ParseError;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ParseErrorPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Path;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Path;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_PathPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_PaymentDetails;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_PaymentDetails;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_PaymentDetailsPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultChainServiceErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultChainServiceErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultChainServiceErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultStorageErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultStorageErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultStorageErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait;

  CrossPlatformFinalizerArg
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_PrepareSendPaymentResponse;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_PrepareSendPaymentResponse;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_PrepareSendPaymentResponsePtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ReceivePaymentMethod;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ReceivePaymentMethod;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ReceivePaymentMethodPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ReceivePaymentRequest;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ReceivePaymentRequest;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ReceivePaymentRequestPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_RefundDepositRequest;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_RefundDepositRequest;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_RefundDepositRequestPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ReqwestRestClient;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ReqwestRestClient;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ReqwestRestClientPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_RestClientChainService;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_RestClientChainService;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_RestClientChainServicePtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SdkBuilder;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SdkBuilder;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SdkBuilderPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SdkError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SdkError;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SdkErrorPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SdkEvent;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SdkEvent;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SdkEventPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SendPaymentMethod;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SendPaymentMethod;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SendPaymentMethodPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SendPaymentOptions;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SendPaymentOptions;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SendPaymentOptionsPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SendPaymentRequest;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SendPaymentRequest;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SendPaymentRequestPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ServiceConnectivityError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ServiceConnectivityError;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_ServiceConnectivityErrorPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SqliteStorage;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SqliteStorage;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SqliteStoragePtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_StorageError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_StorageError;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_StorageErrorPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SuccessAction;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SuccessAction;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SuccessActionPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SuccessActionProcessed;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SuccessActionProcessed;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SuccessActionProcessedPtr;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_UpdateDepositPayload;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_UpdateDepositPayload;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_UpdateDepositPayloadPtr;
}

class BreezSparkApiImpl extends BreezSparkApiImplPlatform implements BreezSparkApi {
  BreezSparkApiImpl({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  @override
  Future<BasicAuth> breezSdkSparkChainRestClientBasicAuthNew({
    required String username,
    required String password,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_String(username);
          var arg1 = cst_encode_String(password);
          return wire.wire__breez_sdk_spark__chain__rest_client__BasicAuth_new(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkChainRestClientBasicAuthNewConstMeta,
        argValues: [username, password],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkChainRestClientBasicAuthNewConstMeta =>
      const TaskConstMeta(debugName: "BasicAuth_new", argNames: ["username", "password"]);

  @override
  Future<ClaimDepositResponse> breezSdkSparkBreezSdkClaimDeposit({
    required BreezSdk that,
    required ClaimDepositRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_box_autoadd_claim_deposit_request(request);
          return wire.wire__breez_sdk_spark__BreezSdk_claim_deposit(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_claim_deposit_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkClaimDepositConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkClaimDepositConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_claim_deposit", argNames: ["that", "request"]);

  @override
  Future<void> breezSdkSparkBreezSdkDisconnect({required BreezSdk that}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          return wire.wire__breez_sdk_spark__BreezSdk_disconnect(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_unit,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkDisconnectConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkDisconnectConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_disconnect", argNames: ["that"]);

  @override
  Stream<SdkEvent> breezSdkSparkBreezSdkFrbOverrideAddEventListener({required BreezSdk that}) {
    final listener = RustStreamSink<SdkEvent>();
    unawaited(
      handler.executeNormal(
        NormalTask(
          callFfi: (port_) {
            var arg0 =
                cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                  that,
                );
            var arg1 =
                cst_encode_StreamSink_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent_Dco(
                  listener,
                );
            return wire.wire__breez_sdk_spark__BreezSdk_frb_override_add_event_listener(port_, arg0, arg1);
          },
          codec: DcoCodec(decodeSuccessData: dco_decode_String, decodeErrorData: null),
          constMeta: kBreezSdkSparkBreezSdkFrbOverrideAddEventListenerConstMeta,
          argValues: [that, listener],
          apiImpl: this,
        ),
      ),
    );
    return listener.stream;
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkFrbOverrideAddEventListenerConstMeta => const TaskConstMeta(
    debugName: "BreezSdk_frb_override_add_event_listener(dart_style=add_event_listener)",
    argNames: ["that", "listener"],
  );

  @override
  Future<GetInfoResponse> breezSdkSparkBreezSdkGetInfo({
    required BreezSdk that,
    required GetInfoRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_box_autoadd_get_info_request(request);
          return wire.wire__breez_sdk_spark__BreezSdk_get_info(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_get_info_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkGetInfoConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkGetInfoConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_get_info", argNames: ["that", "request"]);

  @override
  Future<GetPaymentResponse> breezSdkSparkBreezSdkGetPayment({
    required BreezSdk that,
    required GetPaymentRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_box_autoadd_get_payment_request(request);
          return wire.wire__breez_sdk_spark__BreezSdk_get_payment(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_get_payment_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkGetPaymentConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkGetPaymentConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_get_payment", argNames: ["that", "request"]);

  @override
  Future<ListPaymentsResponse> breezSdkSparkBreezSdkListPayments({
    required BreezSdk that,
    required ListPaymentsRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_box_autoadd_list_payments_request(request);
          return wire.wire__breez_sdk_spark__BreezSdk_list_payments(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_list_payments_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkListPaymentsConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkListPaymentsConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_list_payments", argNames: ["that", "request"]);

  @override
  Future<ListUnclaimedDepositsResponse> breezSdkSparkBreezSdkListUnclaimedDeposits({
    required BreezSdk that,
    required ListUnclaimedDepositsRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_box_autoadd_list_unclaimed_deposits_request(request);
          return wire.wire__breez_sdk_spark__BreezSdk_list_unclaimed_deposits(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_list_unclaimed_deposits_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkListUnclaimedDepositsConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkListUnclaimedDepositsConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_list_unclaimed_deposits", argNames: ["that", "request"]);

  @override
  Future<LnurlPayResponse> breezSdkSparkBreezSdkLnurlPay({
    required BreezSdk that,
    required LnurlPayRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_box_autoadd_lnurl_pay_request(request);
          return wire.wire__breez_sdk_spark__BreezSdk_lnurl_pay(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_lnurl_pay_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkLnurlPayConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkLnurlPayConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_lnurl_pay", argNames: ["that", "request"]);

  @override
  Future<PrepareLnurlPayResponse> breezSdkSparkBreezSdkPrepareLnurlPay({
    required BreezSdk that,
    required PrepareLnurlPayRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_box_autoadd_prepare_lnurl_pay_request(request);
          return wire.wire__breez_sdk_spark__BreezSdk_prepare_lnurl_pay(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_prepare_lnurl_pay_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkPrepareLnurlPayConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkPrepareLnurlPayConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_prepare_lnurl_pay", argNames: ["that", "request"]);

  @override
  Future<PrepareSendPaymentResponse> breezSdkSparkBreezSdkPrepareSendPayment({
    required BreezSdk that,
    required PrepareSendPaymentRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_box_autoadd_prepare_send_payment_request(request);
          return wire.wire__breez_sdk_spark__BreezSdk_prepare_send_payment(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkPrepareSendPaymentConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkPrepareSendPaymentConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_prepare_send_payment", argNames: ["that", "request"]);

  @override
  Future<ReceivePaymentResponse> breezSdkSparkBreezSdkReceivePayment({
    required BreezSdk that,
    required ReceivePaymentRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
                request,
              );
          return wire.wire__breez_sdk_spark__BreezSdk_receive_payment(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_receive_payment_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkReceivePaymentConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkReceivePaymentConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_receive_payment", argNames: ["that", "request"]);

  @override
  Future<RefundDepositResponse> breezSdkSparkBreezSdkRefundDeposit({
    required BreezSdk that,
    required RefundDepositRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
                request,
              );
          return wire.wire__breez_sdk_spark__BreezSdk_refund_deposit(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_refund_deposit_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkRefundDepositConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkRefundDepositConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_refund_deposit", argNames: ["that", "request"]);

  @override
  Future<bool> breezSdkSparkBreezSdkRemoveEventListener({required BreezSdk that, required String id}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_String(id);
          return wire.wire__breez_sdk_spark__BreezSdk_remove_event_listener(port_, arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_bool, decodeErrorData: null),
        constMeta: kBreezSdkSparkBreezSdkRemoveEventListenerConstMeta,
        argValues: [that, id],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkRemoveEventListenerConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_remove_event_listener", argNames: ["that", "id"]);

  @override
  Future<SendPaymentResponse> breezSdkSparkBreezSdkSendPayment({
    required BreezSdk that,
    required SendPaymentRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
                request,
              );
          return wire.wire__breez_sdk_spark__BreezSdk_send_payment(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_send_payment_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkSendPaymentConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkSendPaymentConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_send_payment", argNames: ["that", "request"]);

  @override
  Future<SyncWalletResponse> breezSdkSparkBreezSdkSyncWallet({
    required BreezSdk that,
    required SyncWalletRequest request,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
                that,
              );
          var arg1 = cst_encode_box_autoadd_sync_wallet_request(request);
          return wire.wire__breez_sdk_spark__BreezSdk_sync_wallet(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_sync_wallet_response,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkBreezSdkSyncWalletConstMeta,
        argValues: [that, request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkBreezSdkSyncWalletConstMeta =>
      const TaskConstMeta(debugName: "BreezSdk_sync_wallet", argNames: ["that", "request"]);

  @override
  Future<PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait>
  breezSdkCommonBreezServerBreezServerFetchFiatCurrencies({required BreezServer that}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
                that,
              );
          return wire.wire__breez_sdk_common__breez_server__BreezServer_fetch_fiat_currencies(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkCommonBreezServerBreezServerFetchFiatCurrenciesConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonBreezServerBreezServerFetchFiatCurrenciesConstMeta =>
      const TaskConstMeta(debugName: "BreezServer_fetch_fiat_currencies", argNames: ["that"]);

  @override
  Future<PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait>
  breezSdkCommonBreezServerBreezServerFetchFiatRates({required BreezServer that}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
                that,
              );
          return wire.wire__breez_sdk_common__breez_server__BreezServer_fetch_fiat_rates(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkCommonBreezServerBreezServerFetchFiatRatesConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonBreezServerBreezServerFetchFiatRatesConstMeta =>
      const TaskConstMeta(debugName: "BreezServer_fetch_fiat_rates", argNames: ["that"]);

  @override
  Future<String> breezSdkSparkEventEmitterAddListener({
    required EventEmitter that,
    required EventListener listener,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
                that,
              );
          var arg1 = cst_encode_box_DynTrait_EventListener(listener);
          return wire.wire__breez_sdk_spark__EventEmitter_add_listener(port_, arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_String, decodeErrorData: null),
        constMeta: kBreezSdkSparkEventEmitterAddListenerConstMeta,
        argValues: [that, listener],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkEventEmitterAddListenerConstMeta =>
      const TaskConstMeta(debugName: "EventEmitter_add_listener", argNames: ["that", "listener"]);

  @override
  Future<EventEmitter> breezSdkSparkEventEmitterDefault() {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          return wire.wire__breez_sdk_spark__EventEmitter_default(port_);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkEventEmitterDefaultConstMeta,
        argValues: [],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkEventEmitterDefaultConstMeta =>
      const TaskConstMeta(debugName: "EventEmitter_default", argNames: []);

  @override
  Future<void> breezSdkSparkEventEmitterEmit({required EventEmitter that, required SdkEvent event}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
                that,
              );
          var arg1 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
                event,
              );
          return wire.wire__breez_sdk_spark__EventEmitter_emit(port_, arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkEventEmitterEmitConstMeta,
        argValues: [that, event],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkEventEmitterEmitConstMeta =>
      const TaskConstMeta(debugName: "EventEmitter_emit", argNames: ["that", "event"]);

  @override
  Future<EventEmitter> breezSdkSparkEventEmitterNew() {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          return wire.wire__breez_sdk_spark__EventEmitter_new(port_);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkEventEmitterNewConstMeta,
        argValues: [],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkEventEmitterNewConstMeta =>
      const TaskConstMeta(debugName: "EventEmitter_new", argNames: []);

  @override
  Future<bool> breezSdkSparkEventEmitterRemoveListener({required EventEmitter that, required String id}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
                that,
              );
          var arg1 = cst_encode_String(id);
          return wire.wire__breez_sdk_spark__EventEmitter_remove_listener(port_, arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_bool, decodeErrorData: null),
        constMeta: kBreezSdkSparkEventEmitterRemoveListenerConstMeta,
        argValues: [that, id],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkEventEmitterRemoveListenerConstMeta =>
      const TaskConstMeta(debugName: "EventEmitter_remove_listener", argNames: ["that", "id"]);

  @override
  Future<BigInt> breezSdkSparkModelsFeeToSats({required Fee that, required BigInt vbytes}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
            that,
          );
          var arg1 = cst_encode_u_64(vbytes);
          return wire.wire__breez_sdk_spark__models__Fee_to_sats(port_, arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_u_64, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsFeeToSatsConstMeta,
        argValues: [that, vbytes],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsFeeToSatsConstMeta =>
      const TaskConstMeta(debugName: "Fee_to_sats", argNames: ["that", "vbytes"]);

  @override
  BigInt breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetAmountSats({
    required PrepareSendPaymentResponse that,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
                that,
              );
          return wire.wire__breez_sdk_spark__models__PrepareSendPaymentResponse_auto_accessor_get_amount_sats(
            arg0,
          );
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_u_64, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetAmountSatsConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetAmountSatsConstMeta =>
      const TaskConstMeta(
        debugName: "PrepareSendPaymentResponse_auto_accessor_get_amount_sats",
        argNames: ["that"],
      );

  @override
  SendPaymentMethod breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetPaymentMethod({
    required PrepareSendPaymentResponse that,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
                that,
              );
          return wire
              .wire__breez_sdk_spark__models__PrepareSendPaymentResponse_auto_accessor_get_payment_method(
                arg0,
              );
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetPaymentMethodConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetPaymentMethodConstMeta =>
      const TaskConstMeta(
        debugName: "PrepareSendPaymentResponse_auto_accessor_get_payment_method",
        argNames: ["that"],
      );

  @override
  void breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetAmountSats({
    required PrepareSendPaymentResponse that,
    required BigInt amountSats,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
                that,
              );
          var arg1 = cst_encode_u_64(amountSats);
          return wire.wire__breez_sdk_spark__models__PrepareSendPaymentResponse_auto_accessor_set_amount_sats(
            arg0,
            arg1,
          );
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetAmountSatsConstMeta,
        argValues: [that, amountSats],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetAmountSatsConstMeta =>
      const TaskConstMeta(
        debugName: "PrepareSendPaymentResponse_auto_accessor_set_amount_sats",
        argNames: ["that", "amountSats"],
      );

  @override
  void breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetPaymentMethod({
    required PrepareSendPaymentResponse that,
    required SendPaymentMethod paymentMethod,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
                that,
              );
          var arg1 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod(
                paymentMethod,
              );
          return wire
              .wire__breez_sdk_spark__models__PrepareSendPaymentResponse_auto_accessor_set_payment_method(
                arg0,
                arg1,
              );
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetPaymentMethodConstMeta,
        argValues: [that, paymentMethod],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetPaymentMethodConstMeta =>
      const TaskConstMeta(
        debugName: "PrepareSendPaymentResponse_auto_accessor_set_payment_method",
        argNames: ["that", "paymentMethod"],
      );

  @override
  ReceivePaymentMethod breezSdkSparkModelsReceivePaymentRequestAutoAccessorGetPaymentMethod({
    required ReceivePaymentRequest that,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
                that,
              );
          return wire.wire__breez_sdk_spark__models__ReceivePaymentRequest_auto_accessor_get_payment_method(
            arg0,
          );
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkModelsReceivePaymentRequestAutoAccessorGetPaymentMethodConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsReceivePaymentRequestAutoAccessorGetPaymentMethodConstMeta =>
      const TaskConstMeta(
        debugName: "ReceivePaymentRequest_auto_accessor_get_payment_method",
        argNames: ["that"],
      );

  @override
  void breezSdkSparkModelsReceivePaymentRequestAutoAccessorSetPaymentMethod({
    required ReceivePaymentRequest that,
    required ReceivePaymentMethod paymentMethod,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
                that,
              );
          var arg1 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod(
                paymentMethod,
              );
          return wire.wire__breez_sdk_spark__models__ReceivePaymentRequest_auto_accessor_set_payment_method(
            arg0,
            arg1,
          );
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsReceivePaymentRequestAutoAccessorSetPaymentMethodConstMeta,
        argValues: [that, paymentMethod],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsReceivePaymentRequestAutoAccessorSetPaymentMethodConstMeta =>
      const TaskConstMeta(
        debugName: "ReceivePaymentRequest_auto_accessor_set_payment_method",
        argNames: ["that", "paymentMethod"],
      );

  @override
  String breezSdkSparkModelsRefundDepositRequestAutoAccessorGetDestinationAddress({
    required RefundDepositRequest that,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
                that,
              );
          return wire
              .wire__breez_sdk_spark__models__RefundDepositRequest_auto_accessor_get_destination_address(
                arg0,
              );
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_String, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsRefundDepositRequestAutoAccessorGetDestinationAddressConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsRefundDepositRequestAutoAccessorGetDestinationAddressConstMeta =>
      const TaskConstMeta(
        debugName: "RefundDepositRequest_auto_accessor_get_destination_address",
        argNames: ["that"],
      );

  @override
  Fee breezSdkSparkModelsRefundDepositRequestAutoAccessorGetFee({required RefundDepositRequest that}) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
                that,
              );
          return wire.wire__breez_sdk_spark__models__RefundDepositRequest_auto_accessor_get_fee(arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkModelsRefundDepositRequestAutoAccessorGetFeeConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsRefundDepositRequestAutoAccessorGetFeeConstMeta =>
      const TaskConstMeta(debugName: "RefundDepositRequest_auto_accessor_get_fee", argNames: ["that"]);

  @override
  String breezSdkSparkModelsRefundDepositRequestAutoAccessorGetTxid({required RefundDepositRequest that}) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
                that,
              );
          return wire.wire__breez_sdk_spark__models__RefundDepositRequest_auto_accessor_get_txid(arg0);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_String, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsRefundDepositRequestAutoAccessorGetTxidConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsRefundDepositRequestAutoAccessorGetTxidConstMeta =>
      const TaskConstMeta(debugName: "RefundDepositRequest_auto_accessor_get_txid", argNames: ["that"]);

  @override
  int breezSdkSparkModelsRefundDepositRequestAutoAccessorGetVout({required RefundDepositRequest that}) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
                that,
              );
          return wire.wire__breez_sdk_spark__models__RefundDepositRequest_auto_accessor_get_vout(arg0);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_u_32, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsRefundDepositRequestAutoAccessorGetVoutConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsRefundDepositRequestAutoAccessorGetVoutConstMeta =>
      const TaskConstMeta(debugName: "RefundDepositRequest_auto_accessor_get_vout", argNames: ["that"]);

  @override
  void breezSdkSparkModelsRefundDepositRequestAutoAccessorSetDestinationAddress({
    required RefundDepositRequest that,
    required String destinationAddress,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
                that,
              );
          var arg1 = cst_encode_String(destinationAddress);
          return wire
              .wire__breez_sdk_spark__models__RefundDepositRequest_auto_accessor_set_destination_address(
                arg0,
                arg1,
              );
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsRefundDepositRequestAutoAccessorSetDestinationAddressConstMeta,
        argValues: [that, destinationAddress],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsRefundDepositRequestAutoAccessorSetDestinationAddressConstMeta =>
      const TaskConstMeta(
        debugName: "RefundDepositRequest_auto_accessor_set_destination_address",
        argNames: ["that", "destinationAddress"],
      );

  @override
  void breezSdkSparkModelsRefundDepositRequestAutoAccessorSetFee({
    required RefundDepositRequest that,
    required Fee fee,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
                that,
              );
          var arg1 = cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
            fee,
          );
          return wire.wire__breez_sdk_spark__models__RefundDepositRequest_auto_accessor_set_fee(arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsRefundDepositRequestAutoAccessorSetFeeConstMeta,
        argValues: [that, fee],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsRefundDepositRequestAutoAccessorSetFeeConstMeta =>
      const TaskConstMeta(debugName: "RefundDepositRequest_auto_accessor_set_fee", argNames: ["that", "fee"]);

  @override
  void breezSdkSparkModelsRefundDepositRequestAutoAccessorSetTxid({
    required RefundDepositRequest that,
    required String txid,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
                that,
              );
          var arg1 = cst_encode_String(txid);
          return wire.wire__breez_sdk_spark__models__RefundDepositRequest_auto_accessor_set_txid(arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsRefundDepositRequestAutoAccessorSetTxidConstMeta,
        argValues: [that, txid],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsRefundDepositRequestAutoAccessorSetTxidConstMeta =>
      const TaskConstMeta(
        debugName: "RefundDepositRequest_auto_accessor_set_txid",
        argNames: ["that", "txid"],
      );

  @override
  void breezSdkSparkModelsRefundDepositRequestAutoAccessorSetVout({
    required RefundDepositRequest that,
    required int vout,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
                that,
              );
          var arg1 = cst_encode_u_32(vout);
          return wire.wire__breez_sdk_spark__models__RefundDepositRequest_auto_accessor_set_vout(arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsRefundDepositRequestAutoAccessorSetVoutConstMeta,
        argValues: [that, vout],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsRefundDepositRequestAutoAccessorSetVoutConstMeta =>
      const TaskConstMeta(
        debugName: "RefundDepositRequest_auto_accessor_set_vout",
        argNames: ["that", "vout"],
      );

  @override
  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait>
  breezSdkCommonRestRestClientReqwestRestClientGet({
    required ReqwestRestClient that,
    required String url,
    Map<String, String>? headers,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
                that,
              );
          var arg1 = cst_encode_String(url);
          var arg2 = cst_encode_opt_Map_String_String_None(headers);
          return wire.wire__breez_sdk_common__rest__rest_client__ReqwestRestClient_get(
            port_,
            arg0,
            arg1,
            arg2,
          );
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkCommonRestRestClientReqwestRestClientGetConstMeta,
        argValues: [that, url, headers],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonRestRestClientReqwestRestClientGetConstMeta =>
      const TaskConstMeta(debugName: "ReqwestRestClient_get", argNames: ["that", "url", "headers"]);

  @override
  Future<ReqwestRestClient> breezSdkCommonRestRestClientReqwestRestClientNew() {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          return wire.wire__breez_sdk_common__rest__rest_client__ReqwestRestClient_new(port_);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError,
        ),
        constMeta: kBreezSdkCommonRestRestClientReqwestRestClientNewConstMeta,
        argValues: [],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonRestRestClientReqwestRestClientNewConstMeta =>
      const TaskConstMeta(debugName: "ReqwestRestClient_new", argNames: []);

  @override
  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait>
  breezSdkCommonRestRestClientReqwestRestClientPost({
    required ReqwestRestClient that,
    required String url,
    Map<String, String>? headers,
    String? body,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
                that,
              );
          var arg1 = cst_encode_String(url);
          var arg2 = cst_encode_opt_Map_String_String_None(headers);
          var arg3 = cst_encode_opt_String(body);
          return wire.wire__breez_sdk_common__rest__rest_client__ReqwestRestClient_post(
            port_,
            arg0,
            arg1,
            arg2,
            arg3,
          );
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkCommonRestRestClientReqwestRestClientPostConstMeta,
        argValues: [that, url, headers, body],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonRestRestClientReqwestRestClientPostConstMeta =>
      const TaskConstMeta(debugName: "ReqwestRestClient_post", argNames: ["that", "url", "headers", "body"]);

  @override
  Future<PinBoxFutureOutputResultChainServiceErrorAsyncTrait>
  breezSdkSparkChainRestClientRestClientChainServiceBroadcastTransaction({
    required RestClientChainService that,
    required String tx,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
                that,
              );
          var arg1 = cst_encode_String(tx);
          return wire.wire__breez_sdk_spark__chain__rest_client__RestClientChainService_broadcast_transaction(
            port_,
            arg0,
            arg1,
          );
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkChainRestClientRestClientChainServiceBroadcastTransactionConstMeta,
        argValues: [that, tx],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkChainRestClientRestClientChainServiceBroadcastTransactionConstMeta =>
      const TaskConstMeta(
        debugName: "RestClientChainService_broadcast_transaction",
        argNames: ["that", "tx"],
      );

  @override
  Future<PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait>
  breezSdkSparkChainRestClientRestClientChainServiceGetAddressUtxos({
    required RestClientChainService that,
    required String address,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
                that,
              );
          var arg1 = cst_encode_String(address);
          return wire.wire__breez_sdk_spark__chain__rest_client__RestClientChainService_get_address_utxos(
            port_,
            arg0,
            arg1,
          );
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkChainRestClientRestClientChainServiceGetAddressUtxosConstMeta,
        argValues: [that, address],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkChainRestClientRestClientChainServiceGetAddressUtxosConstMeta =>
      const TaskConstMeta(
        debugName: "RestClientChainService_get_address_utxos",
        argNames: ["that", "address"],
      );

  @override
  Future<PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait>
  breezSdkSparkChainRestClientRestClientChainServiceGetTransactionHex({
    required RestClientChainService that,
    required String txid,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
                that,
              );
          var arg1 = cst_encode_String(txid);
          return wire.wire__breez_sdk_spark__chain__rest_client__RestClientChainService_get_transaction_hex(
            port_,
            arg0,
            arg1,
          );
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkChainRestClientRestClientChainServiceGetTransactionHexConstMeta,
        argValues: [that, txid],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkChainRestClientRestClientChainServiceGetTransactionHexConstMeta =>
      const TaskConstMeta(
        debugName: "RestClientChainService_get_transaction_hex",
        argNames: ["that", "txid"],
      );

  @override
  Future<RestClientChainService> breezSdkSparkChainRestClientRestClientChainServiceNew({
    required String baseUrl,
    required Network network,
    required BigInt maxRetries,
    required RestClient restClient,
    BasicAuth? basicAuth,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_String(baseUrl);
          var arg1 = cst_encode_network(network);
          var arg2 = cst_encode_usize(maxRetries);
          var arg3 = cst_encode_box_DynTrait_RestClient(restClient);
          var arg4 =
              cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
                basicAuth,
              );
          return wire.wire__breez_sdk_spark__chain__rest_client__RestClientChainService_new(
            port_,
            arg0,
            arg1,
            arg2,
            arg3,
            arg4,
          );
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkChainRestClientRestClientChainServiceNewConstMeta,
        argValues: [baseUrl, network, maxRetries, restClient, basicAuth],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkChainRestClientRestClientChainServiceNewConstMeta => const TaskConstMeta(
    debugName: "RestClientChainService_new",
    argNames: ["baseUrl", "network", "maxRetries", "restClient", "basicAuth"],
  );

  @override
  Future<BreezSdk> breezSdkSparkSdkBuilderBuild({required SdkBuilder that}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder(
                that,
              );
          return wire.wire__breez_sdk_spark__SdkBuilder_build(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkSdkBuilderBuildConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSdkBuilderBuildConstMeta =>
      const TaskConstMeta(debugName: "SdkBuilder_build", argNames: ["that"]);

  @override
  Future<SdkBuilder> breezSdkSparkSdkBuilderNew({
    required Config config,
    required String mnemonic,
    required ArcStorage storage,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_box_autoadd_config(config);
          var arg1 = cst_encode_String(mnemonic);
          var arg2 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage(
                storage,
              );
          return wire.wire__breez_sdk_spark__SdkBuilder_new(port_, arg0, arg1, arg2);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSdkBuilderNewConstMeta,
        argValues: [config, mnemonic, storage],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSdkBuilderNewConstMeta =>
      const TaskConstMeta(debugName: "SdkBuilder_new", argNames: ["config", "mnemonic", "storage"]);

  @override
  SendPaymentOptions? breezSdkSparkModelsSendPaymentRequestAutoAccessorGetOptions({
    required SendPaymentRequest that,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
                that,
              );
          return wire.wire__breez_sdk_spark__models__SendPaymentRequest_auto_accessor_get_options(arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkModelsSendPaymentRequestAutoAccessorGetOptionsConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsSendPaymentRequestAutoAccessorGetOptionsConstMeta =>
      const TaskConstMeta(debugName: "SendPaymentRequest_auto_accessor_get_options", argNames: ["that"]);

  @override
  PrepareSendPaymentResponse breezSdkSparkModelsSendPaymentRequestAutoAccessorGetPrepareResponse({
    required SendPaymentRequest that,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
                that,
              );
          return wire.wire__breez_sdk_spark__models__SendPaymentRequest_auto_accessor_get_prepare_response(
            arg0,
          );
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkModelsSendPaymentRequestAutoAccessorGetPrepareResponseConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsSendPaymentRequestAutoAccessorGetPrepareResponseConstMeta =>
      const TaskConstMeta(
        debugName: "SendPaymentRequest_auto_accessor_get_prepare_response",
        argNames: ["that"],
      );

  @override
  void breezSdkSparkModelsSendPaymentRequestAutoAccessorSetOptions({
    required SendPaymentRequest that,
    SendPaymentOptions? options,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
                that,
              );
          var arg1 =
              cst_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
                options,
              );
          return wire.wire__breez_sdk_spark__models__SendPaymentRequest_auto_accessor_set_options(arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsSendPaymentRequestAutoAccessorSetOptionsConstMeta,
        argValues: [that, options],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsSendPaymentRequestAutoAccessorSetOptionsConstMeta =>
      const TaskConstMeta(
        debugName: "SendPaymentRequest_auto_accessor_set_options",
        argNames: ["that", "options"],
      );

  @override
  void breezSdkSparkModelsSendPaymentRequestAutoAccessorSetPrepareResponse({
    required SendPaymentRequest that,
    required PrepareSendPaymentResponse prepareResponse,
  }) {
    return handler.executeSync(
      SyncTask(
        callFfi: () {
          var arg0 =
              cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
                that,
              );
          var arg1 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
                prepareResponse,
              );
          return wire.wire__breez_sdk_spark__models__SendPaymentRequest_auto_accessor_set_prepare_response(
            arg0,
            arg1,
          );
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsSendPaymentRequestAutoAccessorSetPrepareResponseConstMeta,
        argValues: [that, prepareResponse],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsSendPaymentRequestAutoAccessorSetPrepareResponseConstMeta =>
      const TaskConstMeta(
        debugName: "SendPaymentRequest_auto_accessor_set_prepare_response",
        argNames: ["that", "prepareResponse"],
      );

  @override
  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageAddDeposit({
    required SqliteStorage that,
    required String txid,
    required int vout,
    required BigInt amountSats,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          var arg1 = cst_encode_String(txid);
          var arg2 = cst_encode_u_32(vout);
          var arg3 = cst_encode_u_64(amountSats);
          return wire.wire__breez_sdk_spark__SqliteStorage_add_deposit(port_, arg0, arg1, arg2, arg3);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageAddDepositConstMeta,
        argValues: [that, txid, vout, amountSats],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageAddDepositConstMeta => const TaskConstMeta(
    debugName: "SqliteStorage_add_deposit",
    argNames: ["that", "txid", "vout", "amountSats"],
  );

  @override
  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageDeleteDeposit({
    required SqliteStorage that,
    required String txid,
    required int vout,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          var arg1 = cst_encode_String(txid);
          var arg2 = cst_encode_u_32(vout);
          return wire.wire__breez_sdk_spark__SqliteStorage_delete_deposit(port_, arg0, arg1, arg2);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageDeleteDepositConstMeta,
        argValues: [that, txid, vout],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageDeleteDepositConstMeta =>
      const TaskConstMeta(debugName: "SqliteStorage_delete_deposit", argNames: ["that", "txid", "vout"]);

  @override
  Future<PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait> breezSdkSparkSqliteStorageGetCachedItem({
    required SqliteStorage that,
    required String key,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          var arg1 = cst_encode_String(key);
          return wire.wire__breez_sdk_spark__SqliteStorage_get_cached_item(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageGetCachedItemConstMeta,
        argValues: [that, key],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageGetCachedItemConstMeta =>
      const TaskConstMeta(debugName: "SqliteStorage_get_cached_item", argNames: ["that", "key"]);

  @override
  Future<PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait> breezSdkSparkSqliteStorageGetPaymentById({
    required SqliteStorage that,
    required String id,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          var arg1 = cst_encode_String(id);
          return wire.wire__breez_sdk_spark__SqliteStorage_get_payment_by_id(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageGetPaymentByIdConstMeta,
        argValues: [that, id],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageGetPaymentByIdConstMeta =>
      const TaskConstMeta(debugName: "SqliteStorage_get_payment_by_id", argNames: ["that", "id"]);

  @override
  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageInsertPayment({
    required SqliteStorage that,
    required Payment payment,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          var arg1 = cst_encode_box_autoadd_payment(payment);
          return wire.wire__breez_sdk_spark__SqliteStorage_insert_payment(port_, arg0, arg1);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageInsertPaymentConstMeta,
        argValues: [that, payment],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageInsertPaymentConstMeta =>
      const TaskConstMeta(debugName: "SqliteStorage_insert_payment", argNames: ["that", "payment"]);

  @override
  Future<PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait>
  breezSdkSparkSqliteStorageListDeposits({required SqliteStorage that}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          return wire.wire__breez_sdk_spark__SqliteStorage_list_deposits(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageListDepositsConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageListDepositsConstMeta =>
      const TaskConstMeta(debugName: "SqliteStorage_list_deposits", argNames: ["that"]);

  @override
  Future<PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait> breezSdkSparkSqliteStorageListPayments({
    required SqliteStorage that,
    int? offset,
    int? limit,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          var arg1 = cst_encode_opt_box_autoadd_u_32(offset);
          var arg2 = cst_encode_opt_box_autoadd_u_32(limit);
          return wire.wire__breez_sdk_spark__SqliteStorage_list_payments(port_, arg0, arg1, arg2);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageListPaymentsConstMeta,
        argValues: [that, offset, limit],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageListPaymentsConstMeta =>
      const TaskConstMeta(debugName: "SqliteStorage_list_payments", argNames: ["that", "offset", "limit"]);

  @override
  Future<SqliteStorage> breezSdkSparkSqliteStorageNew({required Path path}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath(
            path,
          );
          return wire.wire__breez_sdk_spark__SqliteStorage_new(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError,
        ),
        constMeta: kBreezSdkSparkSqliteStorageNewConstMeta,
        argValues: [path],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageNewConstMeta =>
      const TaskConstMeta(debugName: "SqliteStorage_new", argNames: ["path"]);

  @override
  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageSetCachedItem({
    required SqliteStorage that,
    required String key,
    required String value,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          var arg1 = cst_encode_String(key);
          var arg2 = cst_encode_String(value);
          return wire.wire__breez_sdk_spark__SqliteStorage_set_cached_item(port_, arg0, arg1, arg2);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageSetCachedItemConstMeta,
        argValues: [that, key, value],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageSetCachedItemConstMeta =>
      const TaskConstMeta(debugName: "SqliteStorage_set_cached_item", argNames: ["that", "key", "value"]);

  @override
  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageSetPaymentMetadata({
    required SqliteStorage that,
    required String paymentId,
    required PaymentMetadata metadata,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          var arg1 = cst_encode_String(paymentId);
          var arg2 = cst_encode_box_autoadd_payment_metadata(metadata);
          return wire.wire__breez_sdk_spark__SqliteStorage_set_payment_metadata(port_, arg0, arg1, arg2);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageSetPaymentMetadataConstMeta,
        argValues: [that, paymentId, metadata],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageSetPaymentMetadataConstMeta => const TaskConstMeta(
    debugName: "SqliteStorage_set_payment_metadata",
    argNames: ["that", "paymentId", "metadata"],
  );

  @override
  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> breezSdkSparkSqliteStorageUpdateDeposit({
    required SqliteStorage that,
    required String txid,
    required int vout,
    required UpdateDepositPayload payload,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 =
              cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
                that,
              );
          var arg1 = cst_encode_String(txid);
          var arg2 = cst_encode_u_32(vout);
          var arg3 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload(
                payload,
              );
          return wire.wire__breez_sdk_spark__SqliteStorage_update_deposit(port_, arg0, arg1, arg2, arg3);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkSparkSqliteStorageUpdateDepositConstMeta,
        argValues: [that, txid, vout, payload],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkSqliteStorageUpdateDepositConstMeta => const TaskConstMeta(
    debugName: "SqliteStorage_update_deposit",
    argNames: ["that", "txid", "vout", "payload"],
  );

  @override
  Future<void> crateBindingEventListenerOnEvent({required BindingEventListener that, required SdkEvent e}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_box_autoadd_binding_event_listener(that);
          var arg1 =
              cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(e);
          return wire.wire__crate__binding_event_listener_on_event(port_, arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kCrateBindingEventListenerOnEventConstMeta,
        argValues: [that, e],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kCrateBindingEventListenerOnEventConstMeta =>
      const TaskConstMeta(debugName: "binding_event_listener_on_event", argNames: ["that", "e"]);

  @override
  Future<void> crateBindingLoggerLog({required BindingLogger that, required LogEntry l}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_box_autoadd_binding_logger(that);
          var arg1 = cst_encode_box_autoadd_log_entry(l);
          return wire.wire__crate__binding_logger_log(port_, arg0, arg1);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_unit, decodeErrorData: null),
        constMeta: kCrateBindingLoggerLogConstMeta,
        argValues: [that, l],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kCrateBindingLoggerLogConstMeta =>
      const TaskConstMeta(debugName: "binding_logger_log", argNames: ["that", "l"]);

  @override
  Future<Bip21Details> breezSdkCommonInputBip21DetailsDefault() {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          return wire.wire__breez_sdk_common__input__bip_21_details_default(port_);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_bip_21_details, decodeErrorData: null),
        constMeta: kBreezSdkCommonInputBip21DetailsDefaultConstMeta,
        argValues: [],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonInputBip21DetailsDefaultConstMeta =>
      const TaskConstMeta(debugName: "bip_21_details_default", argNames: []);

  @override
  Future<Bip21Extra> breezSdkCommonInputBip21ExtraDefault() {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          return wire.wire__breez_sdk_common__input__bip_21_extra_default(port_);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_bip_21_extra, decodeErrorData: null),
        constMeta: kBreezSdkCommonInputBip21ExtraDefaultConstMeta,
        argValues: [],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonInputBip21ExtraDefaultConstMeta =>
      const TaskConstMeta(debugName: "bip_21_extra_default", argNames: []);

  @override
  Future<Bolt11RouteHint> breezSdkCommonInputBolt11RouteHintDefault() {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          return wire.wire__breez_sdk_common__input__bolt_11_route_hint_default(port_);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_bolt_11_route_hint, decodeErrorData: null),
        constMeta: kBreezSdkCommonInputBolt11RouteHintDefaultConstMeta,
        argValues: [],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonInputBolt11RouteHintDefaultConstMeta =>
      const TaskConstMeta(debugName: "bolt_11_route_hint_default", argNames: []);

  @override
  Future<Bolt11RouteHintHop> breezSdkCommonInputBolt11RouteHintHopDefault() {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          return wire.wire__breez_sdk_common__input__bolt_11_route_hint_hop_default(port_);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_bolt_11_route_hint_hop, decodeErrorData: null),
        constMeta: kBreezSdkCommonInputBolt11RouteHintHopDefaultConstMeta,
        argValues: [],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonInputBolt11RouteHintHopDefaultConstMeta =>
      const TaskConstMeta(debugName: "bolt_11_route_hint_hop_default", argNames: []);

  @override
  Future<BreezSdk> breezSdkSparkConnect({required ConnectRequest request}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_box_autoadd_connect_request(request);
          return wire.wire__breez_sdk_spark__connect(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkConnectConstMeta,
        argValues: [request],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkConnectConstMeta =>
      const TaskConstMeta(debugName: "connect", argNames: ["request"]);

  @override
  Future<Config> breezSdkSparkDefaultConfig({required Network network}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_network(network);
          return wire.wire__breez_sdk_spark__default_config(port_, arg0);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_config, decodeErrorData: null),
        constMeta: kBreezSdkSparkDefaultConfigConstMeta,
        argValues: [network],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkDefaultConfigConstMeta =>
      const TaskConstMeta(debugName: "default_config", argNames: ["network"]);

  @override
  Future<ArcStorage> breezSdkSparkDefaultStorage({required String dataDir}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_String(dataDir);
          return wire.wire__breez_sdk_spark__default_storage(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkDefaultStorageConstMeta,
        argValues: [dataDir],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkDefaultStorageConstMeta =>
      const TaskConstMeta(debugName: "default_storage", argNames: ["dataDir"]);

  @override
  Future<void> breezSdkSparkInitLogging({String? logDir, Logger? appLogger, String? logFilter}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_opt_String(logDir);
          var arg1 = cst_encode_opt_box_DynTrait_Logger(appLogger);
          var arg2 = cst_encode_opt_String(logFilter);
          return wire.wire__breez_sdk_spark__init_logging(port_, arg0, arg1, arg2);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_unit,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkInitLoggingConstMeta,
        argValues: [logDir, appLogger, logFilter],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkInitLoggingConstMeta =>
      const TaskConstMeta(debugName: "init_logging", argNames: ["logDir", "appLogger", "logFilter"]);

  @override
  Future<LnurlPayInfo> breezSdkSparkModelsLnurlPayInfoDefault() {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          return wire.wire__breez_sdk_spark__models__lnurl_pay_info_default(port_);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_lnurl_pay_info, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsLnurlPayInfoDefaultConstMeta,
        argValues: [],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsLnurlPayInfoDefaultConstMeta =>
      const TaskConstMeta(debugName: "lnurl_pay_info_default", argNames: []);

  @override
  Future<InputType> breezSdkCommonInputParse({required String input}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_String(input);
          return wire.wire__breez_sdk_common__input__parse(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError,
        ),
        constMeta: kBreezSdkCommonInputParseConstMeta,
        argValues: [input],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonInputParseConstMeta =>
      const TaskConstMeta(debugName: "parse", argNames: ["input"]);

  @override
  Future<InputType> breezSdkSparkParse({required String input}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_String(input);
          return wire.wire__breez_sdk_spark__parse(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType,
          decodeErrorData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError,
        ),
        constMeta: kBreezSdkSparkParseConstMeta,
        argValues: [input],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkParseConstMeta =>
      const TaskConstMeta(debugName: "parse", argNames: ["input"]);

  @override
  Future<Bolt11InvoiceDetails?> breezSdkCommonInputParseInvoice({required String input}) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_String(input);
          return wire.wire__breez_sdk_common__input__parse_invoice(port_, arg0);
        },
        codec: DcoCodec(
          decodeSuccessData: dco_decode_opt_box_autoadd_bolt_11_invoice_details,
          decodeErrorData: null,
        ),
        constMeta: kBreezSdkCommonInputParseInvoiceConstMeta,
        argValues: [input],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonInputParseInvoiceConstMeta =>
      const TaskConstMeta(debugName: "parse_invoice", argNames: ["input"]);

  @override
  Future<PaymentRequestSource> breezSdkCommonInputPaymentRequestSourceDefault() {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          return wire.wire__breez_sdk_common__input__payment_request_source_default(port_);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_payment_request_source, decodeErrorData: null),
        constMeta: kBreezSdkCommonInputPaymentRequestSourceDefaultConstMeta,
        argValues: [],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkCommonInputPaymentRequestSourceDefaultConstMeta =>
      const TaskConstMeta(debugName: "payment_request_source_default", argNames: []);

  @override
  Future<BigInt> breezSdkSparkModelsSendOnchainSpeedFeeQuoteTotalFeeSat({
    required SendOnchainSpeedFeeQuote that,
  }) {
    return handler.executeNormal(
      NormalTask(
        callFfi: (port_) {
          var arg0 = cst_encode_box_autoadd_send_onchain_speed_fee_quote(that);
          return wire.wire__breez_sdk_spark__models__send_onchain_speed_fee_quote_total_fee_sat(port_, arg0);
        },
        codec: DcoCodec(decodeSuccessData: dco_decode_u_64, decodeErrorData: null),
        constMeta: kBreezSdkSparkModelsSendOnchainSpeedFeeQuoteTotalFeeSatConstMeta,
        argValues: [that],
        apiImpl: this,
      ),
    );
  }

  TaskConstMeta get kBreezSdkSparkModelsSendOnchainSpeedFeeQuoteTotalFeeSatConstMeta =>
      const TaskConstMeta(debugName: "send_onchain_speed_fee_quote_total_fee_sat", argNames: ["that"]);

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ArcStorage => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ArcStorage => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BasicAuth => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BasicAuth => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BindingEventListener => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BindingEventListener => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BindingLogger => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BindingLogger => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BreezSdk => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BreezSdk => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_BreezServer => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_BreezServer => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_DepositClaimError => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_DepositClaimError => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_EventEmitter => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_EventEmitter => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Fee =>
      wire.rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Fee =>
      wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_InputType => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_InputType => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ParseError => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ParseError => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_Path =>
      wire.rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_Path =>
      wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_PaymentDetails => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_PaymentDetails => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultChainServiceErrorAsyncTrait => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultChainServiceErrorAsyncTrait => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait =>
      wire.rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait =>
      wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultStorageErrorAsyncTrait => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultStorageErrorAsyncTrait => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait =>
      wire.rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait =>
      wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait;

  RustArcIncrementStrongCountFnType
  get rust_arc_increment_strong_count_PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait;

  RustArcDecrementStrongCountFnType
  get rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_PrepareSendPaymentResponse => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_PrepareSendPaymentResponse => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ReceivePaymentMethod => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ReceivePaymentMethod => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ReceivePaymentRequest => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ReceivePaymentRequest => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_RefundDepositRequest => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_RefundDepositRequest => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ReqwestRestClient => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ReqwestRestClient => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_RestClientChainService => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_RestClientChainService => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SdkBuilder => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SdkBuilder => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SdkError => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SdkError => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SdkEvent => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SdkEvent => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SendPaymentMethod => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SendPaymentMethod => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SendPaymentOptions => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SendPaymentOptions => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SendPaymentRequest => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SendPaymentRequest => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_ServiceConnectivityError => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_ServiceConnectivityError => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SqliteStorage => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SqliteStorage => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_StorageError => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_StorageError => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SuccessAction => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SuccessAction => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_SuccessActionProcessed => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_SuccessActionProcessed => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed;

  RustArcIncrementStrongCountFnType get rust_arc_increment_strong_count_UpdateDepositPayload => wire
      .rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload;

  RustArcDecrementStrongCountFnType get rust_arc_decrement_strong_count_UpdateDepositPayload => wire
      .rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return AnyhowException(raw as String);
  }

  @protected
  BindingEventListener
  dco_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(raw);
  }

  @protected
  BindingLogger
  dco_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(raw);
  }

  @protected
  ReqwestRestClient
  dco_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(raw);
  }

  @protected
  ArcStorage
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ArcStorageImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BasicAuth dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BasicAuthImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BreezSdk dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BreezSdkImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BreezServer dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BreezServerImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DepositClaimError
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return DepositClaimErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  EventEmitter
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return EventEmitterImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Fee dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return FeeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  InputType dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return InputTypeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ParseError dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ParseErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PaymentDetails
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PaymentDetailsImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PinBoxFutureOutputResultChainServiceErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultStorageErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultStorageErrorAsyncTraitImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PrepareSendPaymentResponse
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PrepareSendPaymentResponseImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ReceivePaymentMethod
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReceivePaymentMethodImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ReceivePaymentRequest
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReceivePaymentRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  RefundDepositRequest
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return RefundDepositRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ReqwestRestClient
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReqwestRestClientImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  RestClientChainService
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return RestClientChainServiceImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SdkBuilder dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SdkBuilderImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SdkError dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SdkErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SdkEvent dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SdkEventImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SendPaymentMethod
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SendPaymentMethodImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SendPaymentOptions
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SendPaymentOptionsImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SendPaymentRequest
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SendPaymentRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ServiceConnectivityError
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ServiceConnectivityErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqliteStorage
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqliteStorageImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  StorageError
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return StorageErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SuccessAction
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SuccessActionImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SuccessActionProcessed
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SuccessActionProcessedImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  UpdateDepositPayload
  dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return UpdateDepositPayloadImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PrepareSendPaymentResponse
  dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PrepareSendPaymentResponseImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ReceivePaymentRequest
  dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReceivePaymentRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  RefundDepositRequest
  dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return RefundDepositRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SendPaymentRequest
  dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SendPaymentRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BreezSdk dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BreezSdkImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BreezServer dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BreezServerImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  EventEmitter dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return EventEmitterImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Fee dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return FeeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Path dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PathImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PrepareSendPaymentResponse
  dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PrepareSendPaymentResponseImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ReceivePaymentRequest
  dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReceivePaymentRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  RefundDepositRequest
  dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return RefundDepositRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ReqwestRestClient
  dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReqwestRestClientImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  RestClientChainService
  dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return RestClientChainServiceImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SdkEvent dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SdkEventImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SendPaymentRequest
  dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SendPaymentRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqliteStorage
  dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqliteStorageImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  EventListener dco_decode_DynTrait_EventListener(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  Logger dco_decode_DynTrait_Logger(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  RestClient dco_decode_DynTrait_RestClient(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  Map<String, String> dco_decode_Map_String_String_None(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return Map.fromEntries(dco_decode_list_record_string_string(raw).map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  ArcStorage dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ArcStorageImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BasicAuth dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BasicAuthImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BindingEventListener
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BindingEventListenerImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BindingLogger dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BindingLoggerImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BreezSdk dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BreezSdkImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  BreezServer dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BreezServerImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  DepositClaimError
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return DepositClaimErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  EventEmitter dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return EventEmitterImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Fee dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return FeeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  InputType dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return InputTypeImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ParseError dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ParseErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  Path dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PathImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PaymentDetails dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PaymentDetailsImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PinBoxFutureOutputResultChainServiceErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultStorageErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultStorageErrorAsyncTraitImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl.frbInternalDcoDecode(
      raw as List<dynamic>,
    );
  }

  @protected
  PrepareSendPaymentResponse
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PrepareSendPaymentResponseImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ReceivePaymentMethod
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReceivePaymentMethodImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ReceivePaymentRequest
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReceivePaymentRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  RefundDepositRequest
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return RefundDepositRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ReqwestRestClient
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ReqwestRestClientImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  RestClientChainService
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return RestClientChainServiceImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SdkBuilder dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SdkBuilderImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SdkError dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SdkErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SdkEvent dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SdkEventImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SendPaymentMethod
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SendPaymentMethodImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SendPaymentOptions
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SendPaymentOptionsImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SendPaymentRequest
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SendPaymentRequestImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  ServiceConnectivityError
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return ServiceConnectivityErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SqliteStorage dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SqliteStorageImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  StorageError dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return StorageErrorImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SuccessAction dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SuccessActionImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  SuccessActionProcessed
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return SuccessActionProcessedImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  UpdateDepositPayload
  dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return UpdateDepositPayloadImpl.frbInternalDcoDecode(raw as List<dynamic>);
  }

  @protected
  RustStreamSink<SdkEvent>
  dco_decode_StreamSink_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent_Dco(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  RustStreamSink<LogEntry> dco_decode_StreamSink_log_entry_Dco(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  String dco_decode_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as String;
  }

  @protected
  BitcoinChainService dco_decode_TraitDef_BitcoinChainService(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  BreezSdkExt dco_decode_TraitDef_BreezSdkExt(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  EventListener dco_decode_TraitDef_EventListener(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  FiatAPI dco_decode_TraitDef_FiatAPI(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  Logger dco_decode_TraitDef_Logger(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  RestClient dco_decode_TraitDef_RestClient(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  Storage dco_decode_TraitDef_Storage(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  BindingEventListener dco_decode_binding_event_listener(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return BindingEventListener(
      listener:
          dco_decode_StreamSink_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent_Dco(
            arr[0],
          ),
    );
  }

  @protected
  BindingLogger dco_decode_binding_logger(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return BindingLogger(logger: dco_decode_StreamSink_log_entry_Dco(arr[0]));
  }

  @protected
  Bip21Details dco_decode_bip_21_details(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 7) throw Exception('unexpected arr length: expect 7 but see ${arr.length}');
    return Bip21Details(
      amountSat: dco_decode_opt_box_autoadd_u_64(arr[0]),
      assetId: dco_decode_opt_String(arr[1]),
      uri: dco_decode_String(arr[2]),
      extras: dco_decode_list_bip_21_extra(arr[3]),
      label: dco_decode_opt_String(arr[4]),
      message: dco_decode_opt_String(arr[5]),
      paymentMethods:
          dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
            arr[6],
          ),
    );
  }

  @protected
  Bip21Extra dco_decode_bip_21_extra(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return Bip21Extra(key: dco_decode_String(arr[0]), value: dco_decode_String(arr[1]));
  }

  @protected
  BitcoinNetwork dco_decode_bitcoin_network(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return BitcoinNetwork.values[raw as int];
  }

  @protected
  Bolt11Invoice dco_decode_bolt_11_invoice(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return Bolt11Invoice(
      bolt11: dco_decode_String(arr[0]),
      source: dco_decode_payment_request_source(arr[1]),
    );
  }

  @protected
  Bolt11InvoiceDetails dco_decode_bolt_11_invoice_details(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 12) throw Exception('unexpected arr length: expect 12 but see ${arr.length}');
    return Bolt11InvoiceDetails(
      amountMsat: dco_decode_opt_box_autoadd_u_64(arr[0]),
      description: dco_decode_opt_String(arr[1]),
      descriptionHash: dco_decode_opt_String(arr[2]),
      expiry: dco_decode_u_64(arr[3]),
      invoice: dco_decode_bolt_11_invoice(arr[4]),
      minFinalCltvExpiryDelta: dco_decode_u_64(arr[5]),
      network: dco_decode_bitcoin_network(arr[6]),
      payeePubkey: dco_decode_String(arr[7]),
      paymentHash: dco_decode_String(arr[8]),
      paymentSecret: dco_decode_String(arr[9]),
      routingHints: dco_decode_list_bolt_11_route_hint(arr[10]),
      timestamp: dco_decode_u_64(arr[11]),
    );
  }

  @protected
  Bolt11RouteHint dco_decode_bolt_11_route_hint(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return Bolt11RouteHint(hops: dco_decode_list_bolt_11_route_hint_hop(arr[0]));
  }

  @protected
  Bolt11RouteHintHop dco_decode_bolt_11_route_hint_hop(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 7) throw Exception('unexpected arr length: expect 7 but see ${arr.length}');
    return Bolt11RouteHintHop(
      srcNodeId: dco_decode_String(arr[0]),
      shortChannelId: dco_decode_String(arr[1]),
      feesBaseMsat: dco_decode_u_32(arr[2]),
      feesProportionalMillionths: dco_decode_u_32(arr[3]),
      cltvExpiryDelta: dco_decode_u_16(arr[4]),
      htlcMinimumMsat: dco_decode_opt_box_autoadd_u_64(arr[5]),
      htlcMaximumMsat: dco_decode_opt_box_autoadd_u_64(arr[6]),
    );
  }

  @protected
  bool dco_decode_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as bool;
  }

  @protected
  EventListener dco_decode_box_DynTrait_EventListener(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as EventListener;
  }

  @protected
  Logger dco_decode_box_DynTrait_Logger(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as Logger;
  }

  @protected
  RestClient dco_decode_box_DynTrait_RestClient(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as RestClient;
  }

  @protected
  BasicAuth
  dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(raw);
  }

  @protected
  DepositClaimError
  dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
      raw,
    );
  }

  @protected
  Fee dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(raw);
  }

  @protected
  PaymentDetails
  dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
      raw,
    );
  }

  @protected
  SendPaymentOptions
  dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
      raw,
    );
  }

  @protected
  SuccessAction
  dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
      raw,
    );
  }

  @protected
  SuccessActionProcessed
  dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
      raw,
    );
  }

  @protected
  BindingEventListener dco_decode_box_autoadd_binding_event_listener(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_binding_event_listener(raw);
  }

  @protected
  BindingLogger dco_decode_box_autoadd_binding_logger(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_binding_logger(raw);
  }

  @protected
  Bolt11InvoiceDetails dco_decode_box_autoadd_bolt_11_invoice_details(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_bolt_11_invoice_details(raw);
  }

  @protected
  bool dco_decode_box_autoadd_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as bool;
  }

  @protected
  ClaimDepositRequest dco_decode_box_autoadd_claim_deposit_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_claim_deposit_request(raw);
  }

  @protected
  Config dco_decode_box_autoadd_config(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_config(raw);
  }

  @protected
  ConnectRequest dco_decode_box_autoadd_connect_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_connect_request(raw);
  }

  @protected
  EventListenerImplementor dco_decode_box_autoadd_event_listener_implementor(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_event_listener_implementor(raw);
  }

  @protected
  GetInfoRequest dco_decode_box_autoadd_get_info_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_get_info_request(raw);
  }

  @protected
  GetPaymentRequest dco_decode_box_autoadd_get_payment_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_get_payment_request(raw);
  }

  @protected
  ListPaymentsRequest dco_decode_box_autoadd_list_payments_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_list_payments_request(raw);
  }

  @protected
  ListUnclaimedDepositsRequest dco_decode_box_autoadd_list_unclaimed_deposits_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_list_unclaimed_deposits_request(raw);
  }

  @protected
  LnurlPayInfo dco_decode_box_autoadd_lnurl_pay_info(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_lnurl_pay_info(raw);
  }

  @protected
  LnurlPayRequest dco_decode_box_autoadd_lnurl_pay_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_lnurl_pay_request(raw);
  }

  @protected
  LogEntry dco_decode_box_autoadd_log_entry(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_log_entry(raw);
  }

  @protected
  LoggerImplementor dco_decode_box_autoadd_logger_implementor(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_logger_implementor(raw);
  }

  @protected
  Payment dco_decode_box_autoadd_payment(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_payment(raw);
  }

  @protected
  PaymentMetadata dco_decode_box_autoadd_payment_metadata(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_payment_metadata(raw);
  }

  @protected
  PrepareLnurlPayRequest dco_decode_box_autoadd_prepare_lnurl_pay_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_prepare_lnurl_pay_request(raw);
  }

  @protected
  PrepareSendPaymentRequest dco_decode_box_autoadd_prepare_send_payment_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_prepare_send_payment_request(raw);
  }

  @protected
  RestClientImplementor dco_decode_box_autoadd_rest_client_implementor(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_rest_client_implementor(raw);
  }

  @protected
  SendOnchainSpeedFeeQuote dco_decode_box_autoadd_send_onchain_speed_fee_quote(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_send_onchain_speed_fee_quote(raw);
  }

  @protected
  SyncWalletRequest dco_decode_box_autoadd_sync_wallet_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_sync_wallet_request(raw);
  }

  @protected
  int dco_decode_box_autoadd_u_32(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  BigInt dco_decode_box_autoadd_u_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dco_decode_u_64(raw);
  }

  @protected
  ClaimDepositRequest dco_decode_claim_deposit_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 3) throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return ClaimDepositRequest(
      txid: dco_decode_String(arr[0]),
      vout: dco_decode_u_32(arr[1]),
      maxFee:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
            arr[2],
          ),
    );
  }

  @protected
  ClaimDepositResponse dco_decode_claim_deposit_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return ClaimDepositResponse(payment: dco_decode_payment(arr[0]));
  }

  @protected
  Config dco_decode_config(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4) throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return Config(
      apiKey: dco_decode_opt_String(arr[0]),
      network: dco_decode_network(arr[1]),
      syncIntervalSecs: dco_decode_u_32(arr[2]),
      maxDepositClaimFee:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
            arr[3],
          ),
    );
  }

  @protected
  ConnectRequest dco_decode_connect_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 3) throw Exception('unexpected arr length: expect 3 but see ${arr.length}');
    return ConnectRequest(
      config: dco_decode_config(arr[0]),
      mnemonic: dco_decode_String(arr[1]),
      storageDir: dco_decode_String(arr[2]),
    );
  }

  @protected
  DepositInfo dco_decode_deposit_info(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 6) throw Exception('unexpected arr length: expect 6 but see ${arr.length}');
    return DepositInfo(
      txid: dco_decode_String(arr[0]),
      vout: dco_decode_u_32(arr[1]),
      amountSats: dco_decode_u_64(arr[2]),
      refundTx: dco_decode_opt_String(arr[3]),
      refundTxId: dco_decode_opt_String(arr[4]),
      claimError:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
            arr[5],
          ),
    );
  }

  @protected
  EventListenerImplementor dco_decode_event_listener_implementor(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    switch (raw[0]) {
      case 0:
        return EventListenerImplementor_Variant0(
          dco_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
            raw[1],
          ),
        );
      default:
        throw Exception("unreachable");
    }
  }

  @protected
  GetInfoRequest dco_decode_get_info_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.isNotEmpty) throw Exception('unexpected arr length: expect 0 but see ${arr.length}');
    return GetInfoRequest();
  }

  @protected
  GetInfoResponse dco_decode_get_info_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return GetInfoResponse(balanceSats: dco_decode_u_64(arr[0]));
  }

  @protected
  GetPaymentRequest dco_decode_get_payment_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return GetPaymentRequest(paymentId: dco_decode_String(arr[0]));
  }

  @protected
  GetPaymentResponse dco_decode_get_payment_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return GetPaymentResponse(payment: dco_decode_payment(arr[0]));
  }

  @protected
  int dco_decode_i_32(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  List<InputType>
  dco_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>)
        .map(dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType)
        .toList();
  }

  @protected
  List<Bip21Extra> dco_decode_list_bip_21_extra(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_bip_21_extra).toList();
  }

  @protected
  List<Bolt11RouteHint> dco_decode_list_bolt_11_route_hint(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_bolt_11_route_hint).toList();
  }

  @protected
  List<Bolt11RouteHintHop> dco_decode_list_bolt_11_route_hint_hop(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_bolt_11_route_hint_hop).toList();
  }

  @protected
  List<DepositInfo> dco_decode_list_deposit_info(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_deposit_info).toList();
  }

  @protected
  List<Payment> dco_decode_list_payment(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_payment).toList();
  }

  @protected
  ListPaymentsRequest dco_decode_list_payments_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return ListPaymentsRequest(
      offset: dco_decode_opt_box_autoadd_u_32(arr[0]),
      limit: dco_decode_opt_box_autoadd_u_32(arr[1]),
    );
  }

  @protected
  ListPaymentsResponse dco_decode_list_payments_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return ListPaymentsResponse(payments: dco_decode_list_payment(arr[0]));
  }

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as Uint8List;
  }

  @protected
  List<(String, String)> dco_decode_list_record_string_string(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return (raw as List<dynamic>).map(dco_decode_record_string_string).toList();
  }

  @protected
  ListUnclaimedDepositsRequest dco_decode_list_unclaimed_deposits_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.isNotEmpty) throw Exception('unexpected arr length: expect 0 but see ${arr.length}');
    return ListUnclaimedDepositsRequest();
  }

  @protected
  ListUnclaimedDepositsResponse dco_decode_list_unclaimed_deposits_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return ListUnclaimedDepositsResponse(deposits: dco_decode_list_deposit_info(arr[0]));
  }

  @protected
  LnurlPayInfo dco_decode_lnurl_pay_info(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 6) throw Exception('unexpected arr length: expect 6 but see ${arr.length}');
    return LnurlPayInfo(
      lnAddress: dco_decode_opt_String(arr[0]),
      comment: dco_decode_opt_String(arr[1]),
      domain: dco_decode_opt_String(arr[2]),
      metadata: dco_decode_opt_String(arr[3]),
      processedSuccessAction:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
            arr[4],
          ),
      rawSuccessAction:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
            arr[5],
          ),
    );
  }

  @protected
  LnurlPayRequest dco_decode_lnurl_pay_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return LnurlPayRequest(prepareResponse: dco_decode_prepare_lnurl_pay_response(arr[0]));
  }

  @protected
  LnurlPayRequestDetails dco_decode_lnurl_pay_request_details(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 10) throw Exception('unexpected arr length: expect 10 but see ${arr.length}');
    return LnurlPayRequestDetails(
      callback: dco_decode_String(arr[0]),
      minSendable: dco_decode_u_64(arr[1]),
      maxSendable: dco_decode_u_64(arr[2]),
      metadataStr: dco_decode_String(arr[3]),
      commentAllowed: dco_decode_u_16(arr[4]),
      domain: dco_decode_String(arr[5]),
      url: dco_decode_String(arr[6]),
      address: dco_decode_opt_String(arr[7]),
      allowsNostr: dco_decode_bool(arr[8]),
      nostrPubkey: dco_decode_opt_String(arr[9]),
    );
  }

  @protected
  LnurlPayResponse dco_decode_lnurl_pay_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return LnurlPayResponse(
      payment: dco_decode_payment(arr[0]),
      successAction:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
            arr[1],
          ),
    );
  }

  @protected
  LogEntry dco_decode_log_entry(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return LogEntry(line: dco_decode_String(arr[0]), level: dco_decode_String(arr[1]));
  }

  @protected
  LoggerImplementor dco_decode_logger_implementor(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    switch (raw[0]) {
      case 0:
        return LoggerImplementor_Variant0(
          dco_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
            raw[1],
          ),
        );
      default:
        throw Exception("unreachable");
    }
  }

  @protected
  Network dco_decode_network(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return Network.values[raw as int];
  }

  @protected
  Map<String, String>? dco_decode_opt_Map_String_String_None(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_Map_String_String_None(raw);
  }

  @protected
  String? dco_decode_opt_String(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_String(raw);
  }

  @protected
  Logger? dco_decode_opt_box_DynTrait_Logger(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_DynTrait_Logger(raw);
  }

  @protected
  BasicAuth?
  dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
            raw,
          );
  }

  @protected
  DepositClaimError?
  dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
            raw,
          );
  }

  @protected
  Fee?
  dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
            raw,
          );
  }

  @protected
  PaymentDetails?
  dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
            raw,
          );
  }

  @protected
  SendPaymentOptions?
  dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
            raw,
          );
  }

  @protected
  SuccessAction?
  dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
            raw,
          );
  }

  @protected
  SuccessActionProcessed?
  dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    dynamic raw,
  ) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null
        ? null
        : dco_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
            raw,
          );
  }

  @protected
  Bolt11InvoiceDetails? dco_decode_opt_box_autoadd_bolt_11_invoice_details(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_bolt_11_invoice_details(raw);
  }

  @protected
  bool? dco_decode_opt_box_autoadd_bool(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_bool(raw);
  }

  @protected
  LnurlPayInfo? dco_decode_opt_box_autoadd_lnurl_pay_info(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_lnurl_pay_info(raw);
  }

  @protected
  int? dco_decode_opt_box_autoadd_u_32(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_u_32(raw);
  }

  @protected
  BigInt? dco_decode_opt_box_autoadd_u_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw == null ? null : dco_decode_box_autoadd_u_64(raw);
  }

  @protected
  Payment dco_decode_payment(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 8) throw Exception('unexpected arr length: expect 8 but see ${arr.length}');
    return Payment(
      id: dco_decode_String(arr[0]),
      paymentType: dco_decode_payment_type(arr[1]),
      status: dco_decode_payment_status(arr[2]),
      amount: dco_decode_u_64(arr[3]),
      fees: dco_decode_u_64(arr[4]),
      timestamp: dco_decode_u_64(arr[5]),
      method: dco_decode_payment_method(arr[6]),
      details:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
            arr[7],
          ),
    );
  }

  @protected
  PaymentMetadata dco_decode_payment_metadata(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return PaymentMetadata(lnurlPayInfo: dco_decode_opt_box_autoadd_lnurl_pay_info(arr[0]));
  }

  @protected
  PaymentMethod dco_decode_payment_method(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PaymentMethod.values[raw as int];
  }

  @protected
  PaymentRequestSource dco_decode_payment_request_source(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return PaymentRequestSource(
      bip21Uri: dco_decode_opt_String(arr[0]),
      bip353Address: dco_decode_opt_String(arr[1]),
    );
  }

  @protected
  PaymentStatus dco_decode_payment_status(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PaymentStatus.values[raw as int];
  }

  @protected
  PaymentType dco_decode_payment_type(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return PaymentType.values[raw as int];
  }

  @protected
  PrepareLnurlPayRequest dco_decode_prepare_lnurl_pay_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 4) throw Exception('unexpected arr length: expect 4 but see ${arr.length}');
    return PrepareLnurlPayRequest(
      amountSats: dco_decode_u_64(arr[0]),
      payRequest: dco_decode_lnurl_pay_request_details(arr[1]),
      comment: dco_decode_opt_String(arr[2]),
      validateSuccessActionUrl: dco_decode_opt_box_autoadd_bool(arr[3]),
    );
  }

  @protected
  PrepareLnurlPayResponse dco_decode_prepare_lnurl_pay_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 6) throw Exception('unexpected arr length: expect 6 but see ${arr.length}');
    return PrepareLnurlPayResponse(
      amountSats: dco_decode_u_64(arr[0]),
      comment: dco_decode_opt_String(arr[1]),
      payRequest: dco_decode_lnurl_pay_request_details(arr[2]),
      feeSats: dco_decode_u_64(arr[3]),
      invoiceDetails: dco_decode_bolt_11_invoice_details(arr[4]),
      successAction:
          dco_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
            arr[5],
          ),
    );
  }

  @protected
  PrepareSendPaymentRequest dco_decode_prepare_send_payment_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return PrepareSendPaymentRequest(
      paymentRequest: dco_decode_String(arr[0]),
      amountSats: dco_decode_opt_box_autoadd_u_64(arr[1]),
    );
  }

  @protected
  ReceivePaymentResponse dco_decode_receive_payment_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return ReceivePaymentResponse(
      paymentRequest: dco_decode_String(arr[0]),
      feeSats: dco_decode_u_64(arr[1]),
    );
  }

  @protected
  (String, String) dco_decode_record_string_string(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) {
      throw Exception('Expected 2 elements, got ${arr.length}');
    }
    return (dco_decode_String(arr[0]), dco_decode_String(arr[1]));
  }

  @protected
  RefundDepositResponse dco_decode_refund_deposit_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return RefundDepositResponse(txId: dco_decode_String(arr[0]), txHex: dco_decode_String(arr[1]));
  }

  @protected
  RestClientImplementor dco_decode_rest_client_implementor(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    switch (raw[0]) {
      case 0:
        return RestClientImplementor_Variant0(
          dco_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
            raw[1],
          ),
        );
      default:
        throw Exception("unreachable");
    }
  }

  @protected
  SendOnchainSpeedFeeQuote dco_decode_send_onchain_speed_fee_quote(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 2) throw Exception('unexpected arr length: expect 2 but see ${arr.length}');
    return SendOnchainSpeedFeeQuote(
      userFeeSat: dco_decode_u_64(arr[0]),
      l1BroadcastFeeSat: dco_decode_u_64(arr[1]),
    );
  }

  @protected
  SendPaymentResponse dco_decode_send_payment_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.length != 1) throw Exception('unexpected arr length: expect 1 but see ${arr.length}');
    return SendPaymentResponse(payment: dco_decode_payment(arr[0]));
  }

  @protected
  SyncWalletRequest dco_decode_sync_wallet_request(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.isNotEmpty) throw Exception('unexpected arr length: expect 0 but see ${arr.length}');
    return SyncWalletRequest();
  }

  @protected
  SyncWalletResponse dco_decode_sync_wallet_response(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    final arr = raw as List<dynamic>;
    if (arr.isNotEmpty) throw Exception('unexpected arr length: expect 0 but see ${arr.length}');
    return SyncWalletResponse();
  }

  @protected
  int dco_decode_u_16(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  int dco_decode_u_32(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  BigInt dco_decode_u_64(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeU64(raw);
  }

  @protected
  int dco_decode_u_8(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return raw as int;
  }

  @protected
  void dco_decode_unit(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return;
  }

  @protected
  BigInt dco_decode_usize(dynamic raw) {
    // Codec=Dco (DartCObject based), see doc to use other codecs
    return dcoDecodeU64(raw);
  }

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_String(deserializer);
    return AnyhowException(inner);
  }

  @protected
  BindingEventListener
  sse_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
      deserializer,
    );
    return inner;
  }

  @protected
  BindingLogger
  sse_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
      deserializer,
    );
    return inner;
  }

  @protected
  ReqwestRestClient
  sse_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
      deserializer,
    );
    return inner;
  }

  @protected
  ArcStorage
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ArcStorageImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  BasicAuth sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BasicAuthImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  BreezSdk sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BreezSdkImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  BreezServer sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BreezServerImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  DepositClaimError
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return DepositClaimErrorImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  EventEmitter
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return EventEmitterImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  Fee sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return FeeImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  InputType sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return InputTypeImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  ParseError sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ParseErrorImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  PaymentDetails
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PaymentDetailsImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultChainServiceErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultStorageErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PrepareSendPaymentResponse
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PrepareSendPaymentResponseImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ReceivePaymentMethod
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ReceivePaymentMethodImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ReceivePaymentRequest
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ReceivePaymentRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  RefundDepositRequest
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return RefundDepositRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ReqwestRestClient
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ReqwestRestClientImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  RestClientChainService
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return RestClientChainServiceImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SdkBuilder sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SdkBuilderImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SdkError sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SdkErrorImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SdkEvent sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SdkEventImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SendPaymentMethod
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SendPaymentMethodImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SendPaymentOptions
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SendPaymentOptionsImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SendPaymentRequest
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SendPaymentRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ServiceConnectivityError
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ServiceConnectivityErrorImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SqliteStorage
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqliteStorageImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  StorageError
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return StorageErrorImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SuccessAction
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SuccessActionImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SuccessActionProcessed
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SuccessActionProcessedImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  UpdateDepositPayload
  sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return UpdateDepositPayloadImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PrepareSendPaymentResponse
  sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PrepareSendPaymentResponseImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ReceivePaymentRequest
  sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ReceivePaymentRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  RefundDepositRequest
  sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return RefundDepositRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SendPaymentRequest
  sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SendPaymentRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  BreezSdk sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BreezSdkImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  BreezServer sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BreezServerImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  EventEmitter sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return EventEmitterImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  Fee sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return FeeImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Path sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PathImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  PrepareSendPaymentResponse
  sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PrepareSendPaymentResponseImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ReceivePaymentRequest
  sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ReceivePaymentRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  RefundDepositRequest
  sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return RefundDepositRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ReqwestRestClient
  sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ReqwestRestClientImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  RestClientChainService
  sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return RestClientChainServiceImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SdkEvent sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SdkEventImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SendPaymentRequest
  sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SendPaymentRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SqliteStorage
  sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqliteStorageImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  EventListener sse_decode_DynTrait_EventListener(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  Logger sse_decode_DynTrait_Logger(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  RestClient sse_decode_DynTrait_RestClient(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    throw UnimplementedError('');
  }

  @protected
  Map<String, String> sse_decode_Map_String_String_None(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_list_record_string_string(deserializer);
    return Map.fromEntries(inner.map((e) => MapEntry(e.$1, e.$2)));
  }

  @protected
  ArcStorage sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ArcStorageImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  BasicAuth sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BasicAuthImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  BindingEventListener
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BindingEventListenerImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  BindingLogger sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BindingLoggerImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  BreezSdk sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BreezSdkImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  BreezServer sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return BreezServerImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  DepositClaimError
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return DepositClaimErrorImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  EventEmitter sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return EventEmitterImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  Fee sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return FeeImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  InputType sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return InputTypeImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  ParseError sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ParseErrorImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  Path sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PathImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  PaymentDetails sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PaymentDetailsImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultChainServiceErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultStorageErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  PrepareSendPaymentResponse
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return PrepareSendPaymentResponseImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ReceivePaymentMethod
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ReceivePaymentMethodImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ReceivePaymentRequest
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ReceivePaymentRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  RefundDepositRequest
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return RefundDepositRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ReqwestRestClient
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ReqwestRestClientImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  RestClientChainService
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return RestClientChainServiceImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SdkBuilder sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SdkBuilderImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SdkError sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SdkErrorImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SdkEvent sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SdkEventImpl.frbInternalSseDecode(sse_decode_usize(deserializer), sse_decode_i_32(deserializer));
  }

  @protected
  SendPaymentMethod
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SendPaymentMethodImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SendPaymentOptions
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SendPaymentOptionsImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SendPaymentRequest
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SendPaymentRequestImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  ServiceConnectivityError
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ServiceConnectivityErrorImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SqliteStorage sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SqliteStorageImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  StorageError sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return StorageErrorImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SuccessAction sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SuccessActionImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  SuccessActionProcessed
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SuccessActionProcessedImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  UpdateDepositPayload
  sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return UpdateDepositPayloadImpl.frbInternalSseDecode(
      sse_decode_usize(deserializer),
      sse_decode_i_32(deserializer),
    );
  }

  @protected
  RustStreamSink<SdkEvent>
  sse_decode_StreamSink_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent_Dco(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    throw UnimplementedError('Unreachable ()');
  }

  @protected
  RustStreamSink<LogEntry> sse_decode_StreamSink_log_entry_Dco(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    throw UnimplementedError('Unreachable ()');
  }

  @protected
  String sse_decode_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_list_prim_u_8_strict(deserializer);
    return utf8.decoder.convert(inner);
  }

  @protected
  BindingEventListener sse_decode_binding_event_listener(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_listener =
        sse_decode_StreamSink_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent_Dco(
          deserializer,
        );
    return BindingEventListener(listener: var_listener);
  }

  @protected
  BindingLogger sse_decode_binding_logger(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_logger = sse_decode_StreamSink_log_entry_Dco(deserializer);
    return BindingLogger(logger: var_logger);
  }

  @protected
  Bip21Details sse_decode_bip_21_details(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_amountSat = sse_decode_opt_box_autoadd_u_64(deserializer);
    var var_assetId = sse_decode_opt_String(deserializer);
    var var_uri = sse_decode_String(deserializer);
    var var_extras = sse_decode_list_bip_21_extra(deserializer);
    var var_label = sse_decode_opt_String(deserializer);
    var var_message = sse_decode_opt_String(deserializer);
    var var_paymentMethods =
        sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
          deserializer,
        );
    return Bip21Details(
      amountSat: var_amountSat,
      assetId: var_assetId,
      uri: var_uri,
      extras: var_extras,
      label: var_label,
      message: var_message,
      paymentMethods: var_paymentMethods,
    );
  }

  @protected
  Bip21Extra sse_decode_bip_21_extra(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_key = sse_decode_String(deserializer);
    var var_value = sse_decode_String(deserializer);
    return Bip21Extra(key: var_key, value: var_value);
  }

  @protected
  BitcoinNetwork sse_decode_bitcoin_network(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_i_32(deserializer);
    return BitcoinNetwork.values[inner];
  }

  @protected
  Bolt11Invoice sse_decode_bolt_11_invoice(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_bolt11 = sse_decode_String(deserializer);
    var var_source = sse_decode_payment_request_source(deserializer);
    return Bolt11Invoice(bolt11: var_bolt11, source: var_source);
  }

  @protected
  Bolt11InvoiceDetails sse_decode_bolt_11_invoice_details(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_amountMsat = sse_decode_opt_box_autoadd_u_64(deserializer);
    var var_description = sse_decode_opt_String(deserializer);
    var var_descriptionHash = sse_decode_opt_String(deserializer);
    var var_expiry = sse_decode_u_64(deserializer);
    var var_invoice = sse_decode_bolt_11_invoice(deserializer);
    var var_minFinalCltvExpiryDelta = sse_decode_u_64(deserializer);
    var var_network = sse_decode_bitcoin_network(deserializer);
    var var_payeePubkey = sse_decode_String(deserializer);
    var var_paymentHash = sse_decode_String(deserializer);
    var var_paymentSecret = sse_decode_String(deserializer);
    var var_routingHints = sse_decode_list_bolt_11_route_hint(deserializer);
    var var_timestamp = sse_decode_u_64(deserializer);
    return Bolt11InvoiceDetails(
      amountMsat: var_amountMsat,
      description: var_description,
      descriptionHash: var_descriptionHash,
      expiry: var_expiry,
      invoice: var_invoice,
      minFinalCltvExpiryDelta: var_minFinalCltvExpiryDelta,
      network: var_network,
      payeePubkey: var_payeePubkey,
      paymentHash: var_paymentHash,
      paymentSecret: var_paymentSecret,
      routingHints: var_routingHints,
      timestamp: var_timestamp,
    );
  }

  @protected
  Bolt11RouteHint sse_decode_bolt_11_route_hint(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_hops = sse_decode_list_bolt_11_route_hint_hop(deserializer);
    return Bolt11RouteHint(hops: var_hops);
  }

  @protected
  Bolt11RouteHintHop sse_decode_bolt_11_route_hint_hop(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_srcNodeId = sse_decode_String(deserializer);
    var var_shortChannelId = sse_decode_String(deserializer);
    var var_feesBaseMsat = sse_decode_u_32(deserializer);
    var var_feesProportionalMillionths = sse_decode_u_32(deserializer);
    var var_cltvExpiryDelta = sse_decode_u_16(deserializer);
    var var_htlcMinimumMsat = sse_decode_opt_box_autoadd_u_64(deserializer);
    var var_htlcMaximumMsat = sse_decode_opt_box_autoadd_u_64(deserializer);
    return Bolt11RouteHintHop(
      srcNodeId: var_srcNodeId,
      shortChannelId: var_shortChannelId,
      feesBaseMsat: var_feesBaseMsat,
      feesProportionalMillionths: var_feesProportionalMillionths,
      cltvExpiryDelta: var_cltvExpiryDelta,
      htlcMinimumMsat: var_htlcMinimumMsat,
      htlcMaximumMsat: var_htlcMaximumMsat,
    );
  }

  @protected
  bool sse_decode_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8() != 0;
  }

  @protected
  EventListener sse_decode_box_DynTrait_EventListener(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_DynTrait_EventListener(deserializer));
  }

  @protected
  Logger sse_decode_box_DynTrait_Logger(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_DynTrait_Logger(deserializer));
  }

  @protected
  RestClient sse_decode_box_DynTrait_RestClient(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_DynTrait_RestClient(deserializer));
  }

  @protected
  BasicAuth
  sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
      deserializer,
    ));
  }

  @protected
  DepositClaimError
  sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
      deserializer,
    ));
  }

  @protected
  Fee sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
      deserializer,
    ));
  }

  @protected
  PaymentDetails
  sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
      deserializer,
    ));
  }

  @protected
  SendPaymentOptions
  sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
      deserializer,
    ));
  }

  @protected
  SuccessAction
  sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
      deserializer,
    ));
  }

  @protected
  SuccessActionProcessed
  sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
      deserializer,
    ));
  }

  @protected
  BindingEventListener sse_decode_box_autoadd_binding_event_listener(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_binding_event_listener(deserializer));
  }

  @protected
  BindingLogger sse_decode_box_autoadd_binding_logger(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_binding_logger(deserializer));
  }

  @protected
  Bolt11InvoiceDetails sse_decode_box_autoadd_bolt_11_invoice_details(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_bolt_11_invoice_details(deserializer));
  }

  @protected
  bool sse_decode_box_autoadd_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_bool(deserializer));
  }

  @protected
  ClaimDepositRequest sse_decode_box_autoadd_claim_deposit_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_claim_deposit_request(deserializer));
  }

  @protected
  Config sse_decode_box_autoadd_config(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_config(deserializer));
  }

  @protected
  ConnectRequest sse_decode_box_autoadd_connect_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_connect_request(deserializer));
  }

  @protected
  EventListenerImplementor sse_decode_box_autoadd_event_listener_implementor(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_event_listener_implementor(deserializer));
  }

  @protected
  GetInfoRequest sse_decode_box_autoadd_get_info_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_get_info_request(deserializer));
  }

  @protected
  GetPaymentRequest sse_decode_box_autoadd_get_payment_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_get_payment_request(deserializer));
  }

  @protected
  ListPaymentsRequest sse_decode_box_autoadd_list_payments_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_list_payments_request(deserializer));
  }

  @protected
  ListUnclaimedDepositsRequest sse_decode_box_autoadd_list_unclaimed_deposits_request(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_list_unclaimed_deposits_request(deserializer));
  }

  @protected
  LnurlPayInfo sse_decode_box_autoadd_lnurl_pay_info(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_lnurl_pay_info(deserializer));
  }

  @protected
  LnurlPayRequest sse_decode_box_autoadd_lnurl_pay_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_lnurl_pay_request(deserializer));
  }

  @protected
  LogEntry sse_decode_box_autoadd_log_entry(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_log_entry(deserializer));
  }

  @protected
  LoggerImplementor sse_decode_box_autoadd_logger_implementor(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_logger_implementor(deserializer));
  }

  @protected
  Payment sse_decode_box_autoadd_payment(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_payment(deserializer));
  }

  @protected
  PaymentMetadata sse_decode_box_autoadd_payment_metadata(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_payment_metadata(deserializer));
  }

  @protected
  PrepareLnurlPayRequest sse_decode_box_autoadd_prepare_lnurl_pay_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_prepare_lnurl_pay_request(deserializer));
  }

  @protected
  PrepareSendPaymentRequest sse_decode_box_autoadd_prepare_send_payment_request(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_prepare_send_payment_request(deserializer));
  }

  @protected
  RestClientImplementor sse_decode_box_autoadd_rest_client_implementor(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_rest_client_implementor(deserializer));
  }

  @protected
  SendOnchainSpeedFeeQuote sse_decode_box_autoadd_send_onchain_speed_fee_quote(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_send_onchain_speed_fee_quote(deserializer));
  }

  @protected
  SyncWalletRequest sse_decode_box_autoadd_sync_wallet_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_sync_wallet_request(deserializer));
  }

  @protected
  int sse_decode_box_autoadd_u_32(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_u_32(deserializer));
  }

  @protected
  BigInt sse_decode_box_autoadd_u_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return (sse_decode_u_64(deserializer));
  }

  @protected
  ClaimDepositRequest sse_decode_claim_deposit_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_txid = sse_decode_String(deserializer);
    var var_vout = sse_decode_u_32(deserializer);
    var var_maxFee =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
          deserializer,
        );
    return ClaimDepositRequest(txid: var_txid, vout: var_vout, maxFee: var_maxFee);
  }

  @protected
  ClaimDepositResponse sse_decode_claim_deposit_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_payment = sse_decode_payment(deserializer);
    return ClaimDepositResponse(payment: var_payment);
  }

  @protected
  Config sse_decode_config(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_apiKey = sse_decode_opt_String(deserializer);
    var var_network = sse_decode_network(deserializer);
    var var_syncIntervalSecs = sse_decode_u_32(deserializer);
    var var_maxDepositClaimFee =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
          deserializer,
        );
    return Config(
      apiKey: var_apiKey,
      network: var_network,
      syncIntervalSecs: var_syncIntervalSecs,
      maxDepositClaimFee: var_maxDepositClaimFee,
    );
  }

  @protected
  ConnectRequest sse_decode_connect_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_config = sse_decode_config(deserializer);
    var var_mnemonic = sse_decode_String(deserializer);
    var var_storageDir = sse_decode_String(deserializer);
    return ConnectRequest(config: var_config, mnemonic: var_mnemonic, storageDir: var_storageDir);
  }

  @protected
  DepositInfo sse_decode_deposit_info(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_txid = sse_decode_String(deserializer);
    var var_vout = sse_decode_u_32(deserializer);
    var var_amountSats = sse_decode_u_64(deserializer);
    var var_refundTx = sse_decode_opt_String(deserializer);
    var var_refundTxId = sse_decode_opt_String(deserializer);
    var var_claimError =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
          deserializer,
        );
    return DepositInfo(
      txid: var_txid,
      vout: var_vout,
      amountSats: var_amountSats,
      refundTx: var_refundTx,
      refundTxId: var_refundTxId,
      claimError: var_claimError,
    );
  }

  @protected
  EventListenerImplementor sse_decode_event_listener_implementor(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var tag_ = sse_decode_i_32(deserializer);
    switch (tag_) {
      case 0:
        var var_field0 =
            sse_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
              deserializer,
            );
        return EventListenerImplementor_Variant0(var_field0);
      default:
        throw UnimplementedError('');
    }
  }

  @protected
  GetInfoRequest sse_decode_get_info_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return GetInfoRequest();
  }

  @protected
  GetInfoResponse sse_decode_get_info_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_balanceSats = sse_decode_u_64(deserializer);
    return GetInfoResponse(balanceSats: var_balanceSats);
  }

  @protected
  GetPaymentRequest sse_decode_get_payment_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_paymentId = sse_decode_String(deserializer);
    return GetPaymentRequest(paymentId: var_paymentId);
  }

  @protected
  GetPaymentResponse sse_decode_get_payment_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_payment = sse_decode_payment(deserializer);
    return GetPaymentResponse(payment: var_payment);
  }

  @protected
  int sse_decode_i_32(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getInt32();
  }

  @protected
  List<InputType>
  sse_decode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <InputType>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(
        sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
          deserializer,
        ),
      );
    }
    return ans_;
  }

  @protected
  List<Bip21Extra> sse_decode_list_bip_21_extra(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <Bip21Extra>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_bip_21_extra(deserializer));
    }
    return ans_;
  }

  @protected
  List<Bolt11RouteHint> sse_decode_list_bolt_11_route_hint(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <Bolt11RouteHint>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_bolt_11_route_hint(deserializer));
    }
    return ans_;
  }

  @protected
  List<Bolt11RouteHintHop> sse_decode_list_bolt_11_route_hint_hop(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <Bolt11RouteHintHop>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_bolt_11_route_hint_hop(deserializer));
    }
    return ans_;
  }

  @protected
  List<DepositInfo> sse_decode_list_deposit_info(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <DepositInfo>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_deposit_info(deserializer));
    }
    return ans_;
  }

  @protected
  List<Payment> sse_decode_list_payment(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <Payment>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_payment(deserializer));
    }
    return ans_;
  }

  @protected
  ListPaymentsRequest sse_decode_list_payments_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_offset = sse_decode_opt_box_autoadd_u_32(deserializer);
    var var_limit = sse_decode_opt_box_autoadd_u_32(deserializer);
    return ListPaymentsRequest(offset: var_offset, limit: var_limit);
  }

  @protected
  ListPaymentsResponse sse_decode_list_payments_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_payments = sse_decode_list_payment(deserializer);
    return ListPaymentsResponse(payments: var_payments);
  }

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var len_ = sse_decode_i_32(deserializer);
    return deserializer.buffer.getUint8List(len_);
  }

  @protected
  List<(String, String)> sse_decode_list_record_string_string(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var len_ = sse_decode_i_32(deserializer);
    var ans_ = <(String, String)>[];
    for (var idx_ = 0; idx_ < len_; ++idx_) {
      ans_.add(sse_decode_record_string_string(deserializer));
    }
    return ans_;
  }

  @protected
  ListUnclaimedDepositsRequest sse_decode_list_unclaimed_deposits_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return ListUnclaimedDepositsRequest();
  }

  @protected
  ListUnclaimedDepositsResponse sse_decode_list_unclaimed_deposits_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_deposits = sse_decode_list_deposit_info(deserializer);
    return ListUnclaimedDepositsResponse(deposits: var_deposits);
  }

  @protected
  LnurlPayInfo sse_decode_lnurl_pay_info(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_lnAddress = sse_decode_opt_String(deserializer);
    var var_comment = sse_decode_opt_String(deserializer);
    var var_domain = sse_decode_opt_String(deserializer);
    var var_metadata = sse_decode_opt_String(deserializer);
    var var_processedSuccessAction =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
          deserializer,
        );
    var var_rawSuccessAction =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
          deserializer,
        );
    return LnurlPayInfo(
      lnAddress: var_lnAddress,
      comment: var_comment,
      domain: var_domain,
      metadata: var_metadata,
      processedSuccessAction: var_processedSuccessAction,
      rawSuccessAction: var_rawSuccessAction,
    );
  }

  @protected
  LnurlPayRequest sse_decode_lnurl_pay_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_prepareResponse = sse_decode_prepare_lnurl_pay_response(deserializer);
    return LnurlPayRequest(prepareResponse: var_prepareResponse);
  }

  @protected
  LnurlPayRequestDetails sse_decode_lnurl_pay_request_details(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_callback = sse_decode_String(deserializer);
    var var_minSendable = sse_decode_u_64(deserializer);
    var var_maxSendable = sse_decode_u_64(deserializer);
    var var_metadataStr = sse_decode_String(deserializer);
    var var_commentAllowed = sse_decode_u_16(deserializer);
    var var_domain = sse_decode_String(deserializer);
    var var_url = sse_decode_String(deserializer);
    var var_address = sse_decode_opt_String(deserializer);
    var var_allowsNostr = sse_decode_bool(deserializer);
    var var_nostrPubkey = sse_decode_opt_String(deserializer);
    return LnurlPayRequestDetails(
      callback: var_callback,
      minSendable: var_minSendable,
      maxSendable: var_maxSendable,
      metadataStr: var_metadataStr,
      commentAllowed: var_commentAllowed,
      domain: var_domain,
      url: var_url,
      address: var_address,
      allowsNostr: var_allowsNostr,
      nostrPubkey: var_nostrPubkey,
    );
  }

  @protected
  LnurlPayResponse sse_decode_lnurl_pay_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_payment = sse_decode_payment(deserializer);
    var var_successAction =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
          deserializer,
        );
    return LnurlPayResponse(payment: var_payment, successAction: var_successAction);
  }

  @protected
  LogEntry sse_decode_log_entry(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_line = sse_decode_String(deserializer);
    var var_level = sse_decode_String(deserializer);
    return LogEntry(line: var_line, level: var_level);
  }

  @protected
  LoggerImplementor sse_decode_logger_implementor(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var tag_ = sse_decode_i_32(deserializer);
    switch (tag_) {
      case 0:
        var var_field0 =
            sse_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
              deserializer,
            );
        return LoggerImplementor_Variant0(var_field0);
      default:
        throw UnimplementedError('');
    }
  }

  @protected
  Network sse_decode_network(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_i_32(deserializer);
    return Network.values[inner];
  }

  @protected
  Map<String, String>? sse_decode_opt_Map_String_String_None(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_Map_String_String_None(deserializer));
    } else {
      return null;
    }
  }

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_String(deserializer));
    } else {
      return null;
    }
  }

  @protected
  Logger? sse_decode_opt_box_DynTrait_Logger(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_DynTrait_Logger(deserializer));
    } else {
      return null;
    }
  }

  @protected
  BasicAuth?
  sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
        deserializer,
      ));
    } else {
      return null;
    }
  }

  @protected
  DepositClaimError?
  sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
        deserializer,
      ));
    } else {
      return null;
    }
  }

  @protected
  Fee?
  sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
        deserializer,
      ));
    } else {
      return null;
    }
  }

  @protected
  PaymentDetails?
  sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
        deserializer,
      ));
    } else {
      return null;
    }
  }

  @protected
  SendPaymentOptions?
  sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
        deserializer,
      ));
    } else {
      return null;
    }
  }

  @protected
  SuccessAction?
  sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
        deserializer,
      ));
    } else {
      return null;
    }
  }

  @protected
  SuccessActionProcessed?
  sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SseDeserializer deserializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
        deserializer,
      ));
    } else {
      return null;
    }
  }

  @protected
  Bolt11InvoiceDetails? sse_decode_opt_box_autoadd_bolt_11_invoice_details(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_bolt_11_invoice_details(deserializer));
    } else {
      return null;
    }
  }

  @protected
  bool? sse_decode_opt_box_autoadd_bool(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_bool(deserializer));
    } else {
      return null;
    }
  }

  @protected
  LnurlPayInfo? sse_decode_opt_box_autoadd_lnurl_pay_info(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_lnurl_pay_info(deserializer));
    } else {
      return null;
    }
  }

  @protected
  int? sse_decode_opt_box_autoadd_u_32(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_u_32(deserializer));
    } else {
      return null;
    }
  }

  @protected
  BigInt? sse_decode_opt_box_autoadd_u_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    if (sse_decode_bool(deserializer)) {
      return (sse_decode_box_autoadd_u_64(deserializer));
    } else {
      return null;
    }
  }

  @protected
  Payment sse_decode_payment(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_id = sse_decode_String(deserializer);
    var var_paymentType = sse_decode_payment_type(deserializer);
    var var_status = sse_decode_payment_status(deserializer);
    var var_amount = sse_decode_u_64(deserializer);
    var var_fees = sse_decode_u_64(deserializer);
    var var_timestamp = sse_decode_u_64(deserializer);
    var var_method = sse_decode_payment_method(deserializer);
    var var_details =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
          deserializer,
        );
    return Payment(
      id: var_id,
      paymentType: var_paymentType,
      status: var_status,
      amount: var_amount,
      fees: var_fees,
      timestamp: var_timestamp,
      method: var_method,
      details: var_details,
    );
  }

  @protected
  PaymentMetadata sse_decode_payment_metadata(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_lnurlPayInfo = sse_decode_opt_box_autoadd_lnurl_pay_info(deserializer);
    return PaymentMetadata(lnurlPayInfo: var_lnurlPayInfo);
  }

  @protected
  PaymentMethod sse_decode_payment_method(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_i_32(deserializer);
    return PaymentMethod.values[inner];
  }

  @protected
  PaymentRequestSource sse_decode_payment_request_source(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_bip21Uri = sse_decode_opt_String(deserializer);
    var var_bip353Address = sse_decode_opt_String(deserializer);
    return PaymentRequestSource(bip21Uri: var_bip21Uri, bip353Address: var_bip353Address);
  }

  @protected
  PaymentStatus sse_decode_payment_status(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_i_32(deserializer);
    return PaymentStatus.values[inner];
  }

  @protected
  PaymentType sse_decode_payment_type(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var inner = sse_decode_i_32(deserializer);
    return PaymentType.values[inner];
  }

  @protected
  PrepareLnurlPayRequest sse_decode_prepare_lnurl_pay_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_amountSats = sse_decode_u_64(deserializer);
    var var_payRequest = sse_decode_lnurl_pay_request_details(deserializer);
    var var_comment = sse_decode_opt_String(deserializer);
    var var_validateSuccessActionUrl = sse_decode_opt_box_autoadd_bool(deserializer);
    return PrepareLnurlPayRequest(
      amountSats: var_amountSats,
      payRequest: var_payRequest,
      comment: var_comment,
      validateSuccessActionUrl: var_validateSuccessActionUrl,
    );
  }

  @protected
  PrepareLnurlPayResponse sse_decode_prepare_lnurl_pay_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_amountSats = sse_decode_u_64(deserializer);
    var var_comment = sse_decode_opt_String(deserializer);
    var var_payRequest = sse_decode_lnurl_pay_request_details(deserializer);
    var var_feeSats = sse_decode_u_64(deserializer);
    var var_invoiceDetails = sse_decode_bolt_11_invoice_details(deserializer);
    var var_successAction =
        sse_decode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
          deserializer,
        );
    return PrepareLnurlPayResponse(
      amountSats: var_amountSats,
      comment: var_comment,
      payRequest: var_payRequest,
      feeSats: var_feeSats,
      invoiceDetails: var_invoiceDetails,
      successAction: var_successAction,
    );
  }

  @protected
  PrepareSendPaymentRequest sse_decode_prepare_send_payment_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_paymentRequest = sse_decode_String(deserializer);
    var var_amountSats = sse_decode_opt_box_autoadd_u_64(deserializer);
    return PrepareSendPaymentRequest(paymentRequest: var_paymentRequest, amountSats: var_amountSats);
  }

  @protected
  ReceivePaymentResponse sse_decode_receive_payment_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_paymentRequest = sse_decode_String(deserializer);
    var var_feeSats = sse_decode_u_64(deserializer);
    return ReceivePaymentResponse(paymentRequest: var_paymentRequest, feeSats: var_feeSats);
  }

  @protected
  (String, String) sse_decode_record_string_string(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_field0 = sse_decode_String(deserializer);
    var var_field1 = sse_decode_String(deserializer);
    return (var_field0, var_field1);
  }

  @protected
  RefundDepositResponse sse_decode_refund_deposit_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_txId = sse_decode_String(deserializer);
    var var_txHex = sse_decode_String(deserializer);
    return RefundDepositResponse(txId: var_txId, txHex: var_txHex);
  }

  @protected
  RestClientImplementor sse_decode_rest_client_implementor(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    var tag_ = sse_decode_i_32(deserializer);
    switch (tag_) {
      case 0:
        var var_field0 =
            sse_decode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
              deserializer,
            );
        return RestClientImplementor_Variant0(var_field0);
      default:
        throw UnimplementedError('');
    }
  }

  @protected
  SendOnchainSpeedFeeQuote sse_decode_send_onchain_speed_fee_quote(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_userFeeSat = sse_decode_u_64(deserializer);
    var var_l1BroadcastFeeSat = sse_decode_u_64(deserializer);
    return SendOnchainSpeedFeeQuote(userFeeSat: var_userFeeSat, l1BroadcastFeeSat: var_l1BroadcastFeeSat);
  }

  @protected
  SendPaymentResponse sse_decode_send_payment_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    var var_payment = sse_decode_payment(deserializer);
    return SendPaymentResponse(payment: var_payment);
  }

  @protected
  SyncWalletRequest sse_decode_sync_wallet_request(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SyncWalletRequest();
  }

  @protected
  SyncWalletResponse sse_decode_sync_wallet_response(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return SyncWalletResponse();
  }

  @protected
  int sse_decode_u_16(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint16();
  }

  @protected
  int sse_decode_u_32(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint32();
  }

  @protected
  BigInt sse_decode_u_64(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getBigUint64();
  }

  @protected
  int sse_decode_u_8(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getUint8();
  }

  @protected
  void sse_decode_unit(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    return deserializer.buffer.getBigUint64();
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage(
    ArcStorage raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ArcStorageImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    BasicAuth raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BasicAuthImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    BreezSdk raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BreezSdkImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    BreezServer raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BreezServerImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    DepositClaimError raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as DepositClaimErrorImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    EventEmitter raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as EventEmitterImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(Fee raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as FeeImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
    InputType raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as InputTypeImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError(
    ParseError raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ParseErrorImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    PaymentDetails raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PaymentDetailsImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultChainServiceErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait(
    PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl).frbInternalCstEncode(
      move: true,
    );
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait(
    PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl).frbInternalCstEncode(
      move: true,
    );
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl)
        .frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait(
    PinBoxFutureOutputResultStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultStorageErrorAsyncTraitImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl).frbInternalCstEncode(
      move: true,
    );
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait(
    PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl).frbInternalCstEncode(
      move: true,
    );
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl)
        .frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait(
    PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl).frbInternalCstEncode(
      move: true,
    );
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl)
        .frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl).frbInternalCstEncode(
      move: true,
    );
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    PrepareSendPaymentResponse raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PrepareSendPaymentResponseImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod(
    ReceivePaymentMethod raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ReceivePaymentMethodImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    ReceivePaymentRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ReceivePaymentRequestImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    RefundDepositRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as RefundDepositRequestImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    ReqwestRestClient raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ReqwestRestClientImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    RestClientChainService raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as RestClientChainServiceImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder(
    SdkBuilder raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SdkBuilderImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError(
    SdkError raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SdkErrorImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    SdkEvent raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SdkEventImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod(
    SendPaymentMethod raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SendPaymentMethodImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SendPaymentOptions raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SendPaymentOptionsImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SendPaymentRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SendPaymentRequestImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError(
    ServiceConnectivityError raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ServiceConnectivityErrorImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    SqliteStorage raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SqliteStorageImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError(
    StorageError raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as StorageErrorImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SuccessAction raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SuccessActionImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SuccessActionProcessed raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SuccessActionProcessedImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload(
    UpdateDepositPayload raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as UpdateDepositPayloadImpl).frbInternalCstEncode(move: true);
  }

  @protected
  int
  cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    PrepareSendPaymentResponse raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PrepareSendPaymentResponseImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int
  cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    ReceivePaymentRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ReceivePaymentRequestImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int
  cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    RefundDepositRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as RefundDepositRequestImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SendPaymentRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SendPaymentRequestImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    BreezSdk raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BreezSdkImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    BreezServer raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BreezServerImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    EventEmitter raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as EventEmitterImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(Fee raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as FeeImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath(Path raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PathImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int
  cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    PrepareSendPaymentResponse raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PrepareSendPaymentResponseImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    ReceivePaymentRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ReceivePaymentRequestImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    RefundDepositRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as RefundDepositRequestImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    ReqwestRestClient raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ReqwestRestClientImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int
  cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    RestClientChainService raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as RestClientChainServiceImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    SdkEvent raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SdkEventImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SendPaymentRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SendPaymentRequestImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    SqliteStorage raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SqliteStorageImpl).frbInternalCstEncode(move: false);
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage(ArcStorage raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ArcStorageImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(BasicAuth raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BasicAuthImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
    BindingEventListener raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BindingEventListenerImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
    BindingLogger raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BindingLoggerImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(BreezSdk raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BreezSdkImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(BreezServer raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as BreezServerImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    DepositClaimError raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as DepositClaimErrorImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    EventEmitter raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as EventEmitterImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(Fee raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as FeeImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(InputType raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as InputTypeImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError(ParseError raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ParseErrorImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath(Path raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PathImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    PaymentDetails raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PaymentDetailsImpl).frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultChainServiceErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl).frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait(
    PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl).frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait(
    PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl).frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl)
        .frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait(
    PinBoxFutureOutputResultStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultStorageErrorAsyncTraitImpl).frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl).frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait(
    PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl).frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl)
        .frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait(
    PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl).frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl)
        .frbInternalCstEncode();
  }

  @protected
  int
  cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    PrepareSendPaymentResponse raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as PrepareSendPaymentResponseImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod(
    ReceivePaymentMethod raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ReceivePaymentMethodImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    ReceivePaymentRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ReceivePaymentRequestImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    RefundDepositRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as RefundDepositRequestImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    ReqwestRestClient raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ReqwestRestClientImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    RestClientChainService raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as RestClientChainServiceImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder(SdkBuilder raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SdkBuilderImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError(SdkError raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SdkErrorImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(SdkEvent raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SdkEventImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod(
    SendPaymentMethod raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SendPaymentMethodImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SendPaymentOptions raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SendPaymentOptionsImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SendPaymentRequest raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SendPaymentRequestImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError(
    ServiceConnectivityError raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as ServiceConnectivityErrorImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    SqliteStorage raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SqliteStorageImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError(
    StorageError raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as StorageErrorImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SuccessAction raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SuccessActionImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SuccessActionProcessed raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as SuccessActionProcessedImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload(
    UpdateDepositPayload raw,
  ) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    // ignore: invalid_use_of_internal_member
    return (raw as UpdateDepositPayloadImpl).frbInternalCstEncode();
  }

  @protected
  int cst_encode_bitcoin_network(BitcoinNetwork raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_32(raw.index);
  }

  @protected
  bool cst_encode_bool(bool raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  int cst_encode_i_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  int cst_encode_network(Network raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_32(raw.index);
  }

  @protected
  int cst_encode_payment_method(PaymentMethod raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_32(raw.index);
  }

  @protected
  int cst_encode_payment_status(PaymentStatus raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_32(raw.index);
  }

  @protected
  int cst_encode_payment_type(PaymentType raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_i_32(raw.index);
  }

  @protected
  int cst_encode_u_16(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  int cst_encode_u_32(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  int cst_encode_u_8(int raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  void cst_encode_unit(void raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  void sse_encode_AnyhowException(AnyhowException self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.message, serializer);
  }

  @protected
  void
  sse_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
    BindingEventListener self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
      self,
      serializer,
    );
  }

  @protected
  void sse_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
    BindingLogger self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(self, serializer);
  }

  @protected
  void
  sse_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    ReqwestRestClient self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
      self,
      serializer,
    );
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage(
    ArcStorage self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ArcStorageImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    BasicAuth self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BasicAuthImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    BreezSdk self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BreezSdkImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    BreezServer self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BreezServerImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    DepositClaimError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as DepositClaimErrorImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    EventEmitter self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as EventEmitterImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    Fee self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as FeeImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
    InputType self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as InputTypeImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError(
    ParseError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ParseErrorImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    PaymentDetails self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as PaymentDetailsImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultChainServiceErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl).frbInternalSseEncode(move: true),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait(
    PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl).frbInternalSseEncode(
        move: true,
      ),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait(
    PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl).frbInternalSseEncode(move: true),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl)
          .frbInternalSseEncode(move: true),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait(
    PinBoxFutureOutputResultStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultStorageErrorAsyncTraitImpl).frbInternalSseEncode(move: true),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl).frbInternalSseEncode(
        move: true,
      ),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait(
    PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl).frbInternalSseEncode(
        move: true,
      ),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl)
          .frbInternalSseEncode(move: true),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait(
    PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl).frbInternalSseEncode(move: true),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl).frbInternalSseEncode(
        move: true,
      ),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl).frbInternalSseEncode(
        move: true,
      ),
      serializer,
    );
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    PrepareSendPaymentResponse self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as PrepareSendPaymentResponseImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod(
    ReceivePaymentMethod self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ReceivePaymentMethodImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    ReceivePaymentRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ReceivePaymentRequestImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    RefundDepositRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as RefundDepositRequestImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    ReqwestRestClient self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ReqwestRestClientImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    RestClientChainService self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as RestClientChainServiceImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder(
    SdkBuilder self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SdkBuilderImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError(
    SdkError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SdkErrorImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    SdkEvent self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SdkEventImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod(
    SendPaymentMethod self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SendPaymentMethodImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SendPaymentOptions self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SendPaymentOptionsImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SendPaymentRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SendPaymentRequestImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError(
    ServiceConnectivityError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ServiceConnectivityErrorImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    SqliteStorage self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SqliteStorageImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError(
    StorageError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as StorageErrorImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SuccessAction self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SuccessActionImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SuccessActionProcessed self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SuccessActionProcessedImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
  sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload(
    UpdateDepositPayload self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as UpdateDepositPayloadImpl).frbInternalSseEncode(move: true), serializer);
  }

  @protected
  void
  sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    PrepareSendPaymentResponse self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as PrepareSendPaymentResponseImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
  sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    ReceivePaymentRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ReceivePaymentRequestImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
  sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    RefundDepositRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as RefundDepositRequestImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
  sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SendPaymentRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SendPaymentRequestImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    BreezSdk self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BreezSdkImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    BreezServer self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BreezServerImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    EventEmitter self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as EventEmitterImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    Fee self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as FeeImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath(
    Path self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as PathImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
  sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    PrepareSendPaymentResponse self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as PrepareSendPaymentResponseImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
  sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    ReceivePaymentRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ReceivePaymentRequestImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    RefundDepositRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as RefundDepositRequestImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    ReqwestRestClient self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ReqwestRestClientImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void
  sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    RestClientChainService self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as RestClientChainServiceImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    SdkEvent self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SdkEventImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SendPaymentRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SendPaymentRequestImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    SqliteStorage self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SqliteStorageImpl).frbInternalSseEncode(move: false), serializer);
  }

  @protected
  void sse_encode_DynTrait_EventListener(EventListener self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_event_listener_implementor(
      (() {
        if (self is BindingEventListener) {
          return EventListenerImplementor.variant0(self);
        }

        throw Exception('not reachable');
      })(),
      serializer,
    );
  }

  @protected
  void sse_encode_DynTrait_Logger(Logger self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_logger_implementor(
      (() {
        if (self is BindingLogger) {
          return LoggerImplementor.variant0(self);
        }

        throw Exception('not reachable');
      })(),
      serializer,
    );
  }

  @protected
  void sse_encode_DynTrait_RestClient(RestClient self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_rest_client_implementor(
      (() {
        if (self is ReqwestRestClient) {
          return RestClientImplementor.variant0(self);
        }

        throw Exception('not reachable');
      })(),
      serializer,
    );
  }

  @protected
  void sse_encode_Map_String_String_None(Map<String, String> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_record_string_string(self.entries.map((e) => (e.key, e.value)).toList(), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerArcdynStorage(
    ArcStorage self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ArcStorageImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    BasicAuth self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BasicAuthImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
    BindingEventListener self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BindingEventListenerImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
    BindingLogger self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BindingLoggerImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezSdk(
    BreezSdk self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BreezSdkImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBreezServer(
    BreezServer self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as BreezServerImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    DepositClaimError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as DepositClaimErrorImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerEventEmitter(
    EventEmitter self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as EventEmitterImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    Fee self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as FeeImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
    InputType self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as InputTypeImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerParseError(
    ParseError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ParseErrorImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPath(
    Path self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as PathImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    PaymentDetails self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as PaymentDetailsImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultChainServiceErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl).frbInternalSseEncode(move: null),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultOptionStringStorageErrorSendasync_trait(
    PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl).frbInternalSseEncode(
        move: null,
      ),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultPaymentStorageErrorSendasync_trait(
    PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl).frbInternalSseEncode(move: null),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultRestResponseServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl)
          .frbInternalSseEncode(move: null),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStorageErrorSendasync_trait(
    PinBoxFutureOutputResultStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultStorageErrorAsyncTraitImpl).frbInternalSseEncode(move: null),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultStringChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl).frbInternalSseEncode(
        move: null,
      ),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecDepositInfoStorageErrorSendasync_trait(
    PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl).frbInternalSseEncode(
        move: null,
      ),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl)
          .frbInternalSseEncode(move: null),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecPaymentStorageErrorSendasync_trait(
    PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl).frbInternalSseEncode(move: null),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecRateServiceConnectivityErrorSendasync_trait(
    PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl).frbInternalSseEncode(
        move: null,
      ),
      serializer,
    );
  }

  @protected
  void
  sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPinBoxFutureOutputResultVecUtxoChainServiceErrorSendasync_trait(
    PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize(
      (self as PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl).frbInternalSseEncode(
        move: null,
      ),
      serializer,
    );
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPrepareSendPaymentResponse(
    PrepareSendPaymentResponse self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as PrepareSendPaymentResponseImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentMethod(
    ReceivePaymentMethod self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ReceivePaymentMethodImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReceivePaymentRequest(
    ReceivePaymentRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ReceivePaymentRequestImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRefundDepositRequest(
    RefundDepositRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as RefundDepositRequestImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
    ReqwestRestClient self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ReqwestRestClientImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerRestClientChainService(
    RestClientChainService self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as RestClientChainServiceImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkBuilder(
    SdkBuilder self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SdkBuilderImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkError(
    SdkError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SdkErrorImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent(
    SdkEvent self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SdkEventImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentMethod(
    SendPaymentMethod self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SendPaymentMethodImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SendPaymentOptions self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SendPaymentOptionsImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentRequest(
    SendPaymentRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SendPaymentRequestImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerServiceConnectivityError(
    ServiceConnectivityError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as ServiceConnectivityErrorImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSqliteStorage(
    SqliteStorage self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SqliteStorageImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerStorageError(
    StorageError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as StorageErrorImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SuccessAction self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SuccessActionImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SuccessActionProcessed self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as SuccessActionProcessedImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerUpdateDepositPayload(
    UpdateDepositPayload self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_usize((self as UpdateDepositPayloadImpl).frbInternalSseEncode(move: null), serializer);
  }

  @protected
  void
  sse_encode_StreamSink_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent_Dco(
    RustStreamSink<SdkEvent> self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(
      self.setupAndSerialize(
        codec: DcoCodec(
          decodeSuccessData:
              dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent,
          decodeErrorData: dco_decode_AnyhowException,
        ),
      ),
      serializer,
    );
  }

  @protected
  void sse_encode_StreamSink_log_entry_Dco(RustStreamSink<LogEntry> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(
      self.setupAndSerialize(
        codec: DcoCodec(decodeSuccessData: dco_decode_log_entry, decodeErrorData: dco_decode_AnyhowException),
      ),
      serializer,
    );
  }

  @protected
  void sse_encode_String(String self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_prim_u_8_strict(utf8.encoder.convert(self), serializer);
  }

  @protected
  void sse_encode_binding_event_listener(BindingEventListener self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_StreamSink_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSdkEvent_Dco(
      self.listener,
      serializer,
    );
  }

  @protected
  void sse_encode_binding_logger(BindingLogger self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_StreamSink_log_entry_Dco(self.logger, serializer);
  }

  @protected
  void sse_encode_bip_21_details(Bip21Details self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_u_64(self.amountSat, serializer);
    sse_encode_opt_String(self.assetId, serializer);
    sse_encode_String(self.uri, serializer);
    sse_encode_list_bip_21_extra(self.extras, serializer);
    sse_encode_opt_String(self.label, serializer);
    sse_encode_opt_String(self.message, serializer);
    sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
      self.paymentMethods,
      serializer,
    );
  }

  @protected
  void sse_encode_bip_21_extra(Bip21Extra self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.key, serializer);
    sse_encode_String(self.value, serializer);
  }

  @protected
  void sse_encode_bitcoin_network(BitcoinNetwork self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.index, serializer);
  }

  @protected
  void sse_encode_bolt_11_invoice(Bolt11Invoice self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.bolt11, serializer);
    sse_encode_payment_request_source(self.source, serializer);
  }

  @protected
  void sse_encode_bolt_11_invoice_details(Bolt11InvoiceDetails self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_u_64(self.amountMsat, serializer);
    sse_encode_opt_String(self.description, serializer);
    sse_encode_opt_String(self.descriptionHash, serializer);
    sse_encode_u_64(self.expiry, serializer);
    sse_encode_bolt_11_invoice(self.invoice, serializer);
    sse_encode_u_64(self.minFinalCltvExpiryDelta, serializer);
    sse_encode_bitcoin_network(self.network, serializer);
    sse_encode_String(self.payeePubkey, serializer);
    sse_encode_String(self.paymentHash, serializer);
    sse_encode_String(self.paymentSecret, serializer);
    sse_encode_list_bolt_11_route_hint(self.routingHints, serializer);
    sse_encode_u_64(self.timestamp, serializer);
  }

  @protected
  void sse_encode_bolt_11_route_hint(Bolt11RouteHint self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_bolt_11_route_hint_hop(self.hops, serializer);
  }

  @protected
  void sse_encode_bolt_11_route_hint_hop(Bolt11RouteHintHop self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.srcNodeId, serializer);
    sse_encode_String(self.shortChannelId, serializer);
    sse_encode_u_32(self.feesBaseMsat, serializer);
    sse_encode_u_32(self.feesProportionalMillionths, serializer);
    sse_encode_u_16(self.cltvExpiryDelta, serializer);
    sse_encode_opt_box_autoadd_u_64(self.htlcMinimumMsat, serializer);
    sse_encode_opt_box_autoadd_u_64(self.htlcMaximumMsat, serializer);
  }

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self ? 1 : 0);
  }

  @protected
  void sse_encode_box_DynTrait_EventListener(EventListener self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DynTrait_EventListener(self, serializer);
  }

  @protected
  void sse_encode_box_DynTrait_Logger(Logger self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DynTrait_Logger(self, serializer);
  }

  @protected
  void sse_encode_box_DynTrait_RestClient(RestClient self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_DynTrait_RestClient(self, serializer);
  }

  @protected
  void
  sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    BasicAuth self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
      self,
      serializer,
    );
  }

  @protected
  void
  sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    DepositClaimError self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
      self,
      serializer,
    );
  }

  @protected
  void sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    Fee self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(self, serializer);
  }

  @protected
  void
  sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    PaymentDetails self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
      self,
      serializer,
    );
  }

  @protected
  void
  sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SendPaymentOptions self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
      self,
      serializer,
    );
  }

  @protected
  void
  sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SuccessAction self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
      self,
      serializer,
    );
  }

  @protected
  void
  sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SuccessActionProcessed self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
      self,
      serializer,
    );
  }

  @protected
  void sse_encode_box_autoadd_binding_event_listener(BindingEventListener self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_binding_event_listener(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_binding_logger(BindingLogger self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_binding_logger(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_bolt_11_invoice_details(Bolt11InvoiceDetails self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_bolt_11_invoice_details(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_bool(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_claim_deposit_request(ClaimDepositRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_claim_deposit_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_config(Config self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_config(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_connect_request(ConnectRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_connect_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_event_listener_implementor(
    EventListenerImplementor self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_event_listener_implementor(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_get_info_request(GetInfoRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_get_info_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_get_payment_request(GetPaymentRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_get_payment_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_list_payments_request(ListPaymentsRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_payments_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_list_unclaimed_deposits_request(
    ListUnclaimedDepositsRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_unclaimed_deposits_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_lnurl_pay_info(LnurlPayInfo self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_lnurl_pay_info(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_lnurl_pay_request(LnurlPayRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_lnurl_pay_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_log_entry(LogEntry self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_log_entry(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_logger_implementor(LoggerImplementor self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_logger_implementor(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_payment(Payment self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_payment(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_payment_metadata(PaymentMetadata self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_payment_metadata(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_prepare_lnurl_pay_request(
    PrepareLnurlPayRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_prepare_lnurl_pay_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_prepare_send_payment_request(
    PrepareSendPaymentRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_prepare_send_payment_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_rest_client_implementor(RestClientImplementor self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_rest_client_implementor(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_send_onchain_speed_fee_quote(
    SendOnchainSpeedFeeQuote self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_send_onchain_speed_fee_quote(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_sync_wallet_request(SyncWalletRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_sync_wallet_request(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_u_32(self, serializer);
  }

  @protected
  void sse_encode_box_autoadd_u_64(BigInt self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_u_64(self, serializer);
  }

  @protected
  void sse_encode_claim_deposit_request(ClaimDepositRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.txid, serializer);
    sse_encode_u_32(self.vout, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
      self.maxFee,
      serializer,
    );
  }

  @protected
  void sse_encode_claim_deposit_response(ClaimDepositResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_payment(self.payment, serializer);
  }

  @protected
  void sse_encode_config(Config self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_String(self.apiKey, serializer);
    sse_encode_network(self.network, serializer);
    sse_encode_u_32(self.syncIntervalSecs, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
      self.maxDepositClaimFee,
      serializer,
    );
  }

  @protected
  void sse_encode_connect_request(ConnectRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_config(self.config, serializer);
    sse_encode_String(self.mnemonic, serializer);
    sse_encode_String(self.storageDir, serializer);
  }

  @protected
  void sse_encode_deposit_info(DepositInfo self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.txid, serializer);
    sse_encode_u_32(self.vout, serializer);
    sse_encode_u_64(self.amountSats, serializer);
    sse_encode_opt_String(self.refundTx, serializer);
    sse_encode_opt_String(self.refundTxId, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
      self.claimError,
      serializer,
    );
  }

  @protected
  void sse_encode_event_listener_implementor(EventListenerImplementor self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    switch (self) {
      case EventListenerImplementor_Variant0(field0: final field0):
        sse_encode_i_32(0, serializer);
        sse_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingEventListener(
          field0,
          serializer,
        );
    }
  }

  @protected
  void sse_encode_get_info_request(GetInfoRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  void sse_encode_get_info_response(GetInfoResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_u_64(self.balanceSats, serializer);
  }

  @protected
  void sse_encode_get_payment_request(GetPaymentRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.paymentId, serializer);
  }

  @protected
  void sse_encode_get_payment_response(GetPaymentResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_payment(self.payment, serializer);
  }

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putInt32(self);
  }

  @protected
  void sse_encode_list_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
    List<InputType> self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerInputType(
        item,
        serializer,
      );
    }
  }

  @protected
  void sse_encode_list_bip_21_extra(List<Bip21Extra> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_bip_21_extra(item, serializer);
    }
  }

  @protected
  void sse_encode_list_bolt_11_route_hint(List<Bolt11RouteHint> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_bolt_11_route_hint(item, serializer);
    }
  }

  @protected
  void sse_encode_list_bolt_11_route_hint_hop(List<Bolt11RouteHintHop> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_bolt_11_route_hint_hop(item, serializer);
    }
  }

  @protected
  void sse_encode_list_deposit_info(List<DepositInfo> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_deposit_info(item, serializer);
    }
  }

  @protected
  void sse_encode_list_payment(List<Payment> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_payment(item, serializer);
    }
  }

  @protected
  void sse_encode_list_payments_request(ListPaymentsRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_u_32(self.offset, serializer);
    sse_encode_opt_box_autoadd_u_32(self.limit, serializer);
  }

  @protected
  void sse_encode_list_payments_response(ListPaymentsResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_payment(self.payments, serializer);
  }

  @protected
  void sse_encode_list_prim_u_8_strict(Uint8List self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    serializer.buffer.putUint8List(self);
  }

  @protected
  void sse_encode_list_record_string_string(List<(String, String)> self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.length, serializer);
    for (final item in self) {
      sse_encode_record_string_string(item, serializer);
    }
  }

  @protected
  void sse_encode_list_unclaimed_deposits_request(
    ListUnclaimedDepositsRequest self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  void sse_encode_list_unclaimed_deposits_response(
    ListUnclaimedDepositsResponse self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_list_deposit_info(self.deposits, serializer);
  }

  @protected
  void sse_encode_lnurl_pay_info(LnurlPayInfo self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_String(self.lnAddress, serializer);
    sse_encode_opt_String(self.comment, serializer);
    sse_encode_opt_String(self.domain, serializer);
    sse_encode_opt_String(self.metadata, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
      self.processedSuccessAction,
      serializer,
    );
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
      self.rawSuccessAction,
      serializer,
    );
  }

  @protected
  void sse_encode_lnurl_pay_request(LnurlPayRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_prepare_lnurl_pay_response(self.prepareResponse, serializer);
  }

  @protected
  void sse_encode_lnurl_pay_request_details(LnurlPayRequestDetails self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.callback, serializer);
    sse_encode_u_64(self.minSendable, serializer);
    sse_encode_u_64(self.maxSendable, serializer);
    sse_encode_String(self.metadataStr, serializer);
    sse_encode_u_16(self.commentAllowed, serializer);
    sse_encode_String(self.domain, serializer);
    sse_encode_String(self.url, serializer);
    sse_encode_opt_String(self.address, serializer);
    sse_encode_bool(self.allowsNostr, serializer);
    sse_encode_opt_String(self.nostrPubkey, serializer);
  }

  @protected
  void sse_encode_lnurl_pay_response(LnurlPayResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_payment(self.payment, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
      self.successAction,
      serializer,
    );
  }

  @protected
  void sse_encode_log_entry(LogEntry self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.line, serializer);
    sse_encode_String(self.level, serializer);
  }

  @protected
  void sse_encode_logger_implementor(LoggerImplementor self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    switch (self) {
      case LoggerImplementor_Variant0(field0: final field0):
        sse_encode_i_32(0, serializer);
        sse_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBindingLogger(
          field0,
          serializer,
        );
    }
  }

  @protected
  void sse_encode_network(Network self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.index, serializer);
  }

  @protected
  void sse_encode_opt_Map_String_String_None(Map<String, String>? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_Map_String_String_None(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_String(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_DynTrait_Logger(Logger? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_DynTrait_Logger(self, serializer);
    }
  }

  @protected
  void
  sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
    BasicAuth? self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerBasicAuth(
        self,
        serializer,
      );
    }
  }

  @protected
  void
  sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
    DepositClaimError? self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerDepositClaimError(
        self,
        serializer,
      );
    }
  }

  @protected
  void
  sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
    Fee? self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerFee(
        self,
        serializer,
      );
    }
  }

  @protected
  void
  sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
    PaymentDetails? self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
        self,
        serializer,
      );
    }
  }

  @protected
  void
  sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
    SendPaymentOptions? self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSendPaymentOptions(
        self,
        serializer,
      );
    }
  }

  @protected
  void
  sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
    SuccessAction? self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
        self,
        serializer,
      );
    }
  }

  @protected
  void
  sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
    SuccessActionProcessed? self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessActionProcessed(
        self,
        serializer,
      );
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_bolt_11_invoice_details(
    Bolt11InvoiceDetails? self,
    SseSerializer serializer,
  ) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_bolt_11_invoice_details(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_bool(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_lnurl_pay_info(LnurlPayInfo? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_lnurl_pay_info(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_u_32(self, serializer);
    }
  }

  @protected
  void sse_encode_opt_box_autoadd_u_64(BigInt? self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs

    sse_encode_bool(self != null, serializer);
    if (self != null) {
      sse_encode_box_autoadd_u_64(self, serializer);
    }
  }

  @protected
  void sse_encode_payment(Payment self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.id, serializer);
    sse_encode_payment_type(self.paymentType, serializer);
    sse_encode_payment_status(self.status, serializer);
    sse_encode_u_64(self.amount, serializer);
    sse_encode_u_64(self.fees, serializer);
    sse_encode_u_64(self.timestamp, serializer);
    sse_encode_payment_method(self.method, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerPaymentDetails(
      self.details,
      serializer,
    );
  }

  @protected
  void sse_encode_payment_metadata(PaymentMetadata self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_box_autoadd_lnurl_pay_info(self.lnurlPayInfo, serializer);
  }

  @protected
  void sse_encode_payment_method(PaymentMethod self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.index, serializer);
  }

  @protected
  void sse_encode_payment_request_source(PaymentRequestSource self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_opt_String(self.bip21Uri, serializer);
    sse_encode_opt_String(self.bip353Address, serializer);
  }

  @protected
  void sse_encode_payment_status(PaymentStatus self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.index, serializer);
  }

  @protected
  void sse_encode_payment_type(PaymentType self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_i_32(self.index, serializer);
  }

  @protected
  void sse_encode_prepare_lnurl_pay_request(PrepareLnurlPayRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_u_64(self.amountSats, serializer);
    sse_encode_lnurl_pay_request_details(self.payRequest, serializer);
    sse_encode_opt_String(self.comment, serializer);
    sse_encode_opt_box_autoadd_bool(self.validateSuccessActionUrl, serializer);
  }

  @protected
  void sse_encode_prepare_lnurl_pay_response(PrepareLnurlPayResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_u_64(self.amountSats, serializer);
    sse_encode_opt_String(self.comment, serializer);
    sse_encode_lnurl_pay_request_details(self.payRequest, serializer);
    sse_encode_u_64(self.feeSats, serializer);
    sse_encode_bolt_11_invoice_details(self.invoiceDetails, serializer);
    sse_encode_opt_box_autoadd_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerSuccessAction(
      self.successAction,
      serializer,
    );
  }

  @protected
  void sse_encode_prepare_send_payment_request(PrepareSendPaymentRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.paymentRequest, serializer);
    sse_encode_opt_box_autoadd_u_64(self.amountSats, serializer);
  }

  @protected
  void sse_encode_receive_payment_response(ReceivePaymentResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.paymentRequest, serializer);
    sse_encode_u_64(self.feeSats, serializer);
  }

  @protected
  void sse_encode_record_string_string((String, String) self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.$1, serializer);
    sse_encode_String(self.$2, serializer);
  }

  @protected
  void sse_encode_refund_deposit_response(RefundDepositResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_String(self.txId, serializer);
    sse_encode_String(self.txHex, serializer);
  }

  @protected
  void sse_encode_rest_client_implementor(RestClientImplementor self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    switch (self) {
      case RestClientImplementor_Variant0(field0: final field0):
        sse_encode_i_32(0, serializer);
        sse_encode_AutoExplicit_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerReqwestRestClient(
          field0,
          serializer,
        );
    }
  }

  @protected
  void sse_encode_send_onchain_speed_fee_quote(SendOnchainSpeedFeeQuote self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_u_64(self.userFeeSat, serializer);
    sse_encode_u_64(self.l1BroadcastFeeSat, serializer);
  }

  @protected
  void sse_encode_send_payment_response(SendPaymentResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    sse_encode_payment(self.payment, serializer);
  }

  @protected
  void sse_encode_sync_wallet_request(SyncWalletRequest self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  void sse_encode_sync_wallet_response(SyncWalletResponse self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint16(self);
  }

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint32(self);
  }

  @protected
  void sse_encode_u_64(BigInt self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putBigUint64(self);
  }

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putUint8(self);
  }

  @protected
  void sse_encode_unit(void self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
  }

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer) {
    // Codec=Sse (Serialization based), see doc to use other codecs
    serializer.buffer.putBigUint64(self);
  }
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner< BindingEventListener>>
abstract class BindingEventListener implements RustOpaqueInterface {
  Future<void> onEvent({required SdkEvent e});
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner< BindingLogger>>
abstract class BindingLogger implements RustOpaqueInterface {
  Future<void> log({required LogEntry l});
}

@freezed
sealed class EventListenerImplementor with _$EventListenerImplementor {
  const EventListenerImplementor._();

  const factory EventListenerImplementor.variant0(BindingEventListener field0) =
      EventListenerImplementor_Variant0;
}

@freezed
sealed class LoggerImplementor with _$LoggerImplementor {
  const LoggerImplementor._();

  const factory LoggerImplementor.variant0(BindingLogger field0) = LoggerImplementor_Variant0;
}

@freezed
sealed class RestClientImplementor with _$RestClientImplementor {
  const RestClientImplementor._();

  const factory RestClientImplementor.variant0(ReqwestRestClient field0) = RestClientImplementor_Variant0;
}

@sealed
class ArcStorageImpl extends RustOpaque implements ArcStorage {
  // Not to be used by end users
  ArcStorageImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ArcStorageImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_ArcStorage,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_ArcStorage,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_ArcStoragePtr,
  );
}

@sealed
class BasicAuthImpl extends RustOpaque implements BasicAuth {
  // Not to be used by end users
  BasicAuthImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  BasicAuthImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_BasicAuth,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_BasicAuth,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_BasicAuthPtr,
  );
}

@sealed
class BindingEventListenerImpl extends RustOpaque implements BindingEventListener {
  // Not to be used by end users
  BindingEventListenerImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  BindingEventListenerImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_BindingEventListener,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_BindingEventListener,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_BindingEventListenerPtr,
  );

  Future<void> onEvent({required SdkEvent e}) =>
      BreezSpark.instance.api.crateBindingEventListenerOnEvent(that: this, e: e);
}

@sealed
class BindingLoggerImpl extends RustOpaque implements BindingLogger {
  // Not to be used by end users
  BindingLoggerImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  BindingLoggerImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_BindingLogger,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_BindingLogger,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_BindingLoggerPtr,
  );

  Future<void> log({required LogEntry l}) => BreezSpark.instance.api.crateBindingLoggerLog(that: this, l: l);
}

@sealed
class BreezSdkImpl extends RustOpaque implements BreezSdk {
  // Not to be used by end users
  BreezSdkImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  BreezSdkImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_BreezSdk,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_BreezSdk,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_BreezSdkPtr,
  );

  Future<ClaimDepositResponse> claimDeposit({required ClaimDepositRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkClaimDeposit(that: this, request: request);

  /// Stops the SDK's background tasks
  ///
  /// This method stops the background tasks started by the `start()` method.
  /// It should be called before your application terminates to ensure proper cleanup.
  ///
  /// # Returns
  ///
  /// Result containing either success or an `SdkError` if the background task couldn't be stopped
  Future<void> disconnect() => BreezSpark.instance.api.breezSdkSparkBreezSdkDisconnect(that: this);

  Stream<SdkEvent> addEventListener() =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkFrbOverrideAddEventListener(that: this);

  /// Returns the balance of the wallet in satoshis
  Future<GetInfoResponse> getInfo({required GetInfoRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkGetInfo(that: this, request: request);

  Future<GetPaymentResponse> getPayment({required GetPaymentRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkGetPayment(that: this, request: request);

  /// Lists payments from the storage with pagination
  ///
  /// This method provides direct access to the payment history stored in the database.
  /// It returns payments in reverse chronological order (newest first).
  ///
  /// # Arguments
  ///
  /// * `request` - Contains pagination parameters (offset and limit)
  ///
  /// # Returns
  ///
  /// * `Ok(ListPaymentsResponse)` - Contains the list of payments if successful
  /// * `Err(SdkError)` - If there was an error accessing the storage
  ///
  Future<ListPaymentsResponse> listPayments({required ListPaymentsRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkListPayments(that: this, request: request);

  Future<ListUnclaimedDepositsResponse> listUnclaimedDeposits({
    required ListUnclaimedDepositsRequest request,
  }) => BreezSpark.instance.api.breezSdkSparkBreezSdkListUnclaimedDeposits(that: this, request: request);

  Future<LnurlPayResponse> lnurlPay({required LnurlPayRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkLnurlPay(that: this, request: request);

  Future<PrepareLnurlPayResponse> prepareLnurlPay({required PrepareLnurlPayRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkPrepareLnurlPay(that: this, request: request);

  Future<PrepareSendPaymentResponse> prepareSendPayment({required PrepareSendPaymentRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkPrepareSendPayment(that: this, request: request);

  Future<ReceivePaymentResponse> receivePayment({required ReceivePaymentRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkReceivePayment(that: this, request: request);

  Future<RefundDepositResponse> refundDeposit({required RefundDepositRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkRefundDeposit(that: this, request: request);

  /// Removes a previously registered event listener
  ///
  /// # Arguments
  ///
  /// * `id` - The listener ID returned from `add_event_listener`
  ///
  /// # Returns
  ///
  /// `true` if the listener was found and removed, `false` otherwise
  Future<bool> removeEventListener({required String id}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkRemoveEventListener(that: this, id: id);

  Future<SendPaymentResponse> sendPayment({required SendPaymentRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkSendPayment(that: this, request: request);

  /// Synchronizes the wallet with the Spark network
  Future<SyncWalletResponse> syncWallet({required SyncWalletRequest request}) =>
      BreezSpark.instance.api.breezSdkSparkBreezSdkSyncWallet(that: this, request: request);
}

@sealed
class BreezServerImpl extends RustOpaque implements BreezServer {
  // Not to be used by end users
  BreezServerImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  BreezServerImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_BreezServer,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_BreezServer,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_BreezServerPtr,
  );

  Future<PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait> fetchFiatCurrencies() =>
      BreezSpark.instance.api.breezSdkCommonBreezServerBreezServerFetchFiatCurrencies(that: this);

  Future<PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait> fetchFiatRates() =>
      BreezSpark.instance.api.breezSdkCommonBreezServerBreezServerFetchFiatRates(that: this);
}

@sealed
class DepositClaimErrorImpl extends RustOpaque implements DepositClaimError {
  // Not to be used by end users
  DepositClaimErrorImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  DepositClaimErrorImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_DepositClaimError,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_DepositClaimError,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_DepositClaimErrorPtr,
  );
}

@sealed
class EventEmitterImpl extends RustOpaque implements EventEmitter {
  // Not to be used by end users
  EventEmitterImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  EventEmitterImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_EventEmitter,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_EventEmitter,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_EventEmitterPtr,
  );

  /// Add a listener to receive events
  ///
  /// # Arguments
  ///
  /// * `listener` - The listener to add
  ///
  /// # Returns
  ///
  /// A unique identifier for the listener, which can be used to remove it later
  Future<String> addListener({required EventListener listener}) =>
      BreezSpark.instance.api.breezSdkSparkEventEmitterAddListener(that: this, listener: listener);

  /// Emit an event to all registered listeners
  Future<void> emit({required SdkEvent event}) =>
      BreezSpark.instance.api.breezSdkSparkEventEmitterEmit(that: this, event: event);

  /// Remove a listener by its ID
  ///
  /// # Arguments
  ///
  /// * `id` - The ID returned from `add_listener`
  ///
  /// # Returns
  ///
  /// `true` if the listener was found and removed, `false` otherwise
  Future<bool> removeListener({required String id}) =>
      BreezSpark.instance.api.breezSdkSparkEventEmitterRemoveListener(that: this, id: id);
}

@sealed
class FeeImpl extends RustOpaque implements Fee {
  // Not to be used by end users
  FeeImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  FeeImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_Fee,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_Fee,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_FeePtr,
  );

  Future<BigInt> toSats({required BigInt vbytes}) =>
      BreezSpark.instance.api.breezSdkSparkModelsFeeToSats(that: this, vbytes: vbytes);
}

@sealed
class InputTypeImpl extends RustOpaque implements InputType {
  // Not to be used by end users
  InputTypeImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  InputTypeImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_InputType,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_InputType,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_InputTypePtr,
  );
}

@sealed
class ParseErrorImpl extends RustOpaque implements ParseError {
  // Not to be used by end users
  ParseErrorImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ParseErrorImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_ParseError,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_ParseError,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_ParseErrorPtr,
  );
}

@sealed
class PathImpl extends RustOpaque implements Path {
  // Not to be used by end users
  PathImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PathImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_Path,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_Path,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_PathPtr,
  );
}

@sealed
class PaymentDetailsImpl extends RustOpaque implements PaymentDetails {
  // Not to be used by end users
  PaymentDetailsImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PaymentDetailsImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_PaymentDetails,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_PaymentDetails,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_PaymentDetailsPtr,
  );
}

@sealed
class PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultChainServiceErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultChainServiceErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultChainServiceErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultChainServiceErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultChainServiceErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultOptionStringStorageErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultPaymentStorageErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl.frbInternalDcoDecode(
    List<dynamic> wire,
  ) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultStorageErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultStorageErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultStorageErrorAsyncTraitImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultStorageErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultStorageErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultStorageErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultStorageErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultStringChainServiceErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl.frbInternalDcoDecode(
    List<dynamic> wire,
  ) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecFiatCurrencyServiceConnectivityErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl.frbInternalDcoDecode(
    List<dynamic> wire,
  ) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecRateServiceConnectivityErrorAsyncTraitPtr,
  );
}

@sealed
class PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl extends RustOpaque
    implements PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait {
  // Not to be used by end users
  PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitImpl.frbInternalSseDecode(
    BigInt ptr,
    int externalSizeOnNative,
  ) : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_increment_strong_count_PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait,
    rustArcDecrementStrongCount: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait,
    rustArcDecrementStrongCountPtr: BreezSpark
        .instance
        .api
        .rust_arc_decrement_strong_count_PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTraitPtr,
  );
}

@sealed
class PrepareSendPaymentResponseImpl extends RustOpaque implements PrepareSendPaymentResponse {
  // Not to be used by end users
  PrepareSendPaymentResponseImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  PrepareSendPaymentResponseImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        BreezSpark.instance.api.rust_arc_increment_strong_count_PrepareSendPaymentResponse,
    rustArcDecrementStrongCount:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_PrepareSendPaymentResponse,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_PrepareSendPaymentResponsePtr,
  );

  BigInt get amountSats => BreezSpark.instance.api
      .breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetAmountSats(that: this);

  SendPaymentMethod get paymentMethod => BreezSpark.instance.api
      .breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorGetPaymentMethod(that: this);

  set amountSats(BigInt amountSats) =>
      BreezSpark.instance.api.breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetAmountSats(
        that: this,
        amountSats: amountSats,
      );

  set paymentMethod(SendPaymentMethod paymentMethod) =>
      BreezSpark.instance.api.breezSdkSparkModelsPrepareSendPaymentResponseAutoAccessorSetPaymentMethod(
        that: this,
        paymentMethod: paymentMethod,
      );
}

@sealed
class ReceivePaymentMethodImpl extends RustOpaque implements ReceivePaymentMethod {
  // Not to be used by end users
  ReceivePaymentMethodImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ReceivePaymentMethodImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_ReceivePaymentMethod,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_ReceivePaymentMethod,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_ReceivePaymentMethodPtr,
  );
}

@sealed
class ReceivePaymentRequestImpl extends RustOpaque implements ReceivePaymentRequest {
  // Not to be used by end users
  ReceivePaymentRequestImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ReceivePaymentRequestImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        BreezSpark.instance.api.rust_arc_increment_strong_count_ReceivePaymentRequest,
    rustArcDecrementStrongCount:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_ReceivePaymentRequest,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_ReceivePaymentRequestPtr,
  );

  ReceivePaymentMethod get paymentMethod => BreezSpark.instance.api
      .breezSdkSparkModelsReceivePaymentRequestAutoAccessorGetPaymentMethod(that: this);

  set paymentMethod(ReceivePaymentMethod paymentMethod) =>
      BreezSpark.instance.api.breezSdkSparkModelsReceivePaymentRequestAutoAccessorSetPaymentMethod(
        that: this,
        paymentMethod: paymentMethod,
      );
}

@sealed
class RefundDepositRequestImpl extends RustOpaque implements RefundDepositRequest {
  // Not to be used by end users
  RefundDepositRequestImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  RefundDepositRequestImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_RefundDepositRequest,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_RefundDepositRequest,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_RefundDepositRequestPtr,
  );

  String get destinationAddress => BreezSpark.instance.api
      .breezSdkSparkModelsRefundDepositRequestAutoAccessorGetDestinationAddress(that: this);

  Fee get fee =>
      BreezSpark.instance.api.breezSdkSparkModelsRefundDepositRequestAutoAccessorGetFee(that: this);

  String get txid =>
      BreezSpark.instance.api.breezSdkSparkModelsRefundDepositRequestAutoAccessorGetTxid(that: this);

  int get vout =>
      BreezSpark.instance.api.breezSdkSparkModelsRefundDepositRequestAutoAccessorGetVout(that: this);

  set destinationAddress(String destinationAddress) =>
      BreezSpark.instance.api.breezSdkSparkModelsRefundDepositRequestAutoAccessorSetDestinationAddress(
        that: this,
        destinationAddress: destinationAddress,
      );

  set fee(Fee fee) =>
      BreezSpark.instance.api.breezSdkSparkModelsRefundDepositRequestAutoAccessorSetFee(that: this, fee: fee);

  set txid(String txid) => BreezSpark.instance.api.breezSdkSparkModelsRefundDepositRequestAutoAccessorSetTxid(
    that: this,
    txid: txid,
  );

  set vout(int vout) => BreezSpark.instance.api.breezSdkSparkModelsRefundDepositRequestAutoAccessorSetVout(
    that: this,
    vout: vout,
  );
}

@sealed
class ReqwestRestClientImpl extends RustOpaque implements ReqwestRestClient {
  // Not to be used by end users
  ReqwestRestClientImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ReqwestRestClientImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_ReqwestRestClient,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_ReqwestRestClient,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_ReqwestRestClientPtr,
  );

  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait> get_({
    required String url,
    Map<String, String>? headers,
  }) => BreezSpark.instance.api.breezSdkCommonRestRestClientReqwestRestClientGet(
    that: this,
    url: url,
    headers: headers,
  );

  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait> post({
    required String url,
    Map<String, String>? headers,
    String? body,
  }) => BreezSpark.instance.api.breezSdkCommonRestRestClientReqwestRestClientPost(
    that: this,
    url: url,
    headers: headers,
    body: body,
  );
}

@sealed
class RestClientChainServiceImpl extends RustOpaque implements RestClientChainService {
  // Not to be used by end users
  RestClientChainServiceImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  RestClientChainServiceImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        BreezSpark.instance.api.rust_arc_increment_strong_count_RestClientChainService,
    rustArcDecrementStrongCount:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_RestClientChainService,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_RestClientChainServicePtr,
  );

  Future<PinBoxFutureOutputResultChainServiceErrorAsyncTrait> broadcastTransaction({required String tx}) =>
      BreezSpark.instance.api.breezSdkSparkChainRestClientRestClientChainServiceBroadcastTransaction(
        that: this,
        tx: tx,
      );

  Future<PinBoxFutureOutputResultVecUtxoChainServiceErrorAsyncTrait> getAddressUtxos({
    required String address,
  }) => BreezSpark.instance.api.breezSdkSparkChainRestClientRestClientChainServiceGetAddressUtxos(
    that: this,
    address: address,
  );

  Future<PinBoxFutureOutputResultStringChainServiceErrorAsyncTrait> getTransactionHex({
    required String txid,
  }) => BreezSpark.instance.api.breezSdkSparkChainRestClientRestClientChainServiceGetTransactionHex(
    that: this,
    txid: txid,
  );
}

@sealed
class SdkBuilderImpl extends RustOpaque implements SdkBuilder {
  // Not to be used by end users
  SdkBuilderImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SdkBuilderImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_SdkBuilder,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_SdkBuilder,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_SdkBuilderPtr,
  );

  /// Builds the `BreezSdk` instance with the configured components.
  Future<BreezSdk> build() => BreezSpark.instance.api.breezSdkSparkSdkBuilderBuild(that: this);
}

@sealed
class SdkErrorImpl extends RustOpaque implements SdkError {
  // Not to be used by end users
  SdkErrorImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SdkErrorImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_SdkError,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_SdkError,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_SdkErrorPtr,
  );
}

@sealed
class SdkEventImpl extends RustOpaque implements SdkEvent {
  // Not to be used by end users
  SdkEventImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SdkEventImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_SdkEvent,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_SdkEvent,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_SdkEventPtr,
  );
}

@sealed
class SendPaymentMethodImpl extends RustOpaque implements SendPaymentMethod {
  // Not to be used by end users
  SendPaymentMethodImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SendPaymentMethodImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_SendPaymentMethod,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_SendPaymentMethod,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_SendPaymentMethodPtr,
  );
}

@sealed
class SendPaymentOptionsImpl extends RustOpaque implements SendPaymentOptions {
  // Not to be used by end users
  SendPaymentOptionsImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SendPaymentOptionsImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_SendPaymentOptions,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_SendPaymentOptions,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_SendPaymentOptionsPtr,
  );
}

@sealed
class SendPaymentRequestImpl extends RustOpaque implements SendPaymentRequest {
  // Not to be used by end users
  SendPaymentRequestImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SendPaymentRequestImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_SendPaymentRequest,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_SendPaymentRequest,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_SendPaymentRequestPtr,
  );

  SendPaymentOptions? get options =>
      BreezSpark.instance.api.breezSdkSparkModelsSendPaymentRequestAutoAccessorGetOptions(that: this);

  PrepareSendPaymentResponse get prepareResponse =>
      BreezSpark.instance.api.breezSdkSparkModelsSendPaymentRequestAutoAccessorGetPrepareResponse(that: this);

  set options(SendPaymentOptions? options) => BreezSpark.instance.api
      .breezSdkSparkModelsSendPaymentRequestAutoAccessorSetOptions(that: this, options: options);

  set prepareResponse(PrepareSendPaymentResponse prepareResponse) =>
      BreezSpark.instance.api.breezSdkSparkModelsSendPaymentRequestAutoAccessorSetPrepareResponse(
        that: this,
        prepareResponse: prepareResponse,
      );
}

@sealed
class ServiceConnectivityErrorImpl extends RustOpaque implements ServiceConnectivityError {
  // Not to be used by end users
  ServiceConnectivityErrorImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  ServiceConnectivityErrorImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        BreezSpark.instance.api.rust_arc_increment_strong_count_ServiceConnectivityError,
    rustArcDecrementStrongCount:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_ServiceConnectivityError,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_ServiceConnectivityErrorPtr,
  );
}

@sealed
class SqliteStorageImpl extends RustOpaque implements SqliteStorage {
  // Not to be used by end users
  SqliteStorageImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SqliteStorageImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_SqliteStorage,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_SqliteStorage,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_SqliteStoragePtr,
  );

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> addDeposit({
    required String txid,
    required int vout,
    required BigInt amountSats,
  }) => BreezSpark.instance.api.breezSdkSparkSqliteStorageAddDeposit(
    that: this,
    txid: txid,
    vout: vout,
    amountSats: amountSats,
  );

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> deleteDeposit({
    required String txid,
    required int vout,
  }) => BreezSpark.instance.api.breezSdkSparkSqliteStorageDeleteDeposit(that: this, txid: txid, vout: vout);

  Future<PinBoxFutureOutputResultOptionStringStorageErrorAsyncTrait> getCachedItem({required String key}) =>
      BreezSpark.instance.api.breezSdkSparkSqliteStorageGetCachedItem(that: this, key: key);

  Future<PinBoxFutureOutputResultPaymentStorageErrorAsyncTrait> getPaymentById({required String id}) =>
      BreezSpark.instance.api.breezSdkSparkSqliteStorageGetPaymentById(that: this, id: id);

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> insertPayment({required Payment payment}) =>
      BreezSpark.instance.api.breezSdkSparkSqliteStorageInsertPayment(that: this, payment: payment);

  Future<PinBoxFutureOutputResultVecDepositInfoStorageErrorAsyncTrait> listDeposits() =>
      BreezSpark.instance.api.breezSdkSparkSqliteStorageListDeposits(that: this);

  Future<PinBoxFutureOutputResultVecPaymentStorageErrorAsyncTrait> listPayments({int? offset, int? limit}) =>
      BreezSpark.instance.api.breezSdkSparkSqliteStorageListPayments(
        that: this,
        offset: offset,
        limit: limit,
      );

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> setCachedItem({
    required String key,
    required String value,
  }) => BreezSpark.instance.api.breezSdkSparkSqliteStorageSetCachedItem(that: this, key: key, value: value);

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> setPaymentMetadata({
    required String paymentId,
    required PaymentMetadata metadata,
  }) => BreezSpark.instance.api.breezSdkSparkSqliteStorageSetPaymentMetadata(
    that: this,
    paymentId: paymentId,
    metadata: metadata,
  );

  Future<PinBoxFutureOutputResultStorageErrorAsyncTrait> updateDeposit({
    required String txid,
    required int vout,
    required UpdateDepositPayload payload,
  }) => BreezSpark.instance.api.breezSdkSparkSqliteStorageUpdateDeposit(
    that: this,
    txid: txid,
    vout: vout,
    payload: payload,
  );
}

@sealed
class StorageErrorImpl extends RustOpaque implements StorageError {
  // Not to be used by end users
  StorageErrorImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  StorageErrorImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_StorageError,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_StorageError,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_StorageErrorPtr,
  );
}

@sealed
class SuccessActionImpl extends RustOpaque implements SuccessAction {
  // Not to be used by end users
  SuccessActionImpl.frbInternalDcoDecode(List<dynamic> wire) : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SuccessActionImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_SuccessAction,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_SuccessAction,
    rustArcDecrementStrongCountPtr: BreezSpark.instance.api.rust_arc_decrement_strong_count_SuccessActionPtr,
  );
}

@sealed
class SuccessActionProcessedImpl extends RustOpaque implements SuccessActionProcessed {
  // Not to be used by end users
  SuccessActionProcessedImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  SuccessActionProcessedImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount:
        BreezSpark.instance.api.rust_arc_increment_strong_count_SuccessActionProcessed,
    rustArcDecrementStrongCount:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_SuccessActionProcessed,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_SuccessActionProcessedPtr,
  );
}

@sealed
class UpdateDepositPayloadImpl extends RustOpaque implements UpdateDepositPayload {
  // Not to be used by end users
  UpdateDepositPayloadImpl.frbInternalDcoDecode(List<dynamic> wire)
    : super.frbInternalDcoDecode(wire, _kStaticData);

  // Not to be used by end users
  UpdateDepositPayloadImpl.frbInternalSseDecode(BigInt ptr, int externalSizeOnNative)
    : super.frbInternalSseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: BreezSpark.instance.api.rust_arc_increment_strong_count_UpdateDepositPayload,
    rustArcDecrementStrongCount: BreezSpark.instance.api.rust_arc_decrement_strong_count_UpdateDepositPayload,
    rustArcDecrementStrongCountPtr:
        BreezSpark.instance.api.rust_arc_decrement_strong_count_UpdateDepositPayloadPtr,
  );
}
