// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'third_party/breez_sdk_spark.dart';
import 'third_party/breez_sdk_spark/models.dart';

// These functions are ignored because they are not marked as `pub`: `frb_override_init_logging`

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Arc < dyn Storage >>>
abstract class ArcStorage implements RustOpaqueInterface {}

abstract class BreezSdkExt {
  Stream<SdkEvent> addEventListener();
}

class BindingEventListener {
  final RustStreamSink<SdkEvent> listener;

  const BindingEventListener({required this.listener});

  Future<void> onEvent({required SdkEvent e}) =>
      BreezSpark.instance.api.crateBindingEventListenerOnEvent(that: this, e: e);

  @override
  int get hashCode => listener.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BindingEventListener && runtimeType == other.runtimeType && listener == other.listener;
}

class BindingLogger {
  final RustStreamSink<LogEntry> logger;

  const BindingLogger({required this.logger});

  Future<void> log({required LogEntry l}) => BreezSpark.instance.api.crateBindingLoggerLog(that: this, l: l);

  @override
  int get hashCode => logger.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is BindingLogger && runtimeType == other.runtimeType && logger == other.logger;
}
