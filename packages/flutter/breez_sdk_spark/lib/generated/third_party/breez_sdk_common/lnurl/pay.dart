// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<SuccessAction>>
abstract class SuccessAction implements RustOpaqueInterface {}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<SuccessActionProcessed>>
abstract class SuccessActionProcessed implements RustOpaqueInterface {}

class LnurlPayRequestDetails {
  final String callback;

  /// The minimum amount, in millisats, that this LNURL-pay endpoint accepts
  final BigInt minSendable;

  /// The maximum amount, in millisats, that this LNURL-pay endpoint accepts
  final BigInt maxSendable;

  /// As per LUD-06, `metadata` is a raw string (e.g. a json representation of the inner map).
  /// Use `metadata_vec()` to get the parsed items.
  final String metadataStr;

  /// The comment length accepted by this endpoint
  ///
  /// See <https://github.com/lnurl/luds/blob/luds/12.md>
  final int commentAllowed;

  /// Indicates the domain of the LNURL-pay service, to be shown to the user when asking for
  /// payment input, as per LUD-06 spec.
  ///
  /// Note: this is not the domain of the callback, but the domain of the LNURL-pay endpoint.
  final String domain;
  final String url;

  /// Optional lightning address if that was used to resolve the lnurl.
  final String? address;

  /// Value indicating whether the recipient supports Nostr Zaps through NIP-57.
  ///
  /// See <https://github.com/nostr-protocol/nips/blob/master/57.md>
  final bool allowsNostr;

  /// Optional recipient's lnurl provider's Nostr pubkey for NIP-57. If it exists it should be a
  /// valid BIP 340 public key in hex.
  ///
  /// See <https://github.com/nostr-protocol/nips/blob/master/57.md>
  /// See <https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki>
  final String? nostrPubkey;

  const LnurlPayRequestDetails({
    required this.callback,
    required this.minSendable,
    required this.maxSendable,
    required this.metadataStr,
    required this.commentAllowed,
    required this.domain,
    required this.url,
    this.address,
    required this.allowsNostr,
    this.nostrPubkey,
  });

  @override
  int get hashCode =>
      callback.hashCode ^
      minSendable.hashCode ^
      maxSendable.hashCode ^
      metadataStr.hashCode ^
      commentAllowed.hashCode ^
      domain.hashCode ^
      url.hashCode ^
      address.hashCode ^
      allowsNostr.hashCode ^
      nostrPubkey.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is LnurlPayRequestDetails &&
          runtimeType == other.runtimeType &&
          callback == other.callback &&
          minSendable == other.minSendable &&
          maxSendable == other.maxSendable &&
          metadataStr == other.metadataStr &&
          commentAllowed == other.commentAllowed &&
          domain == other.domain &&
          url == other.url &&
          address == other.address &&
          allowsNostr == other.allowsNostr &&
          nostrPubkey == other.nostrPubkey;
}
