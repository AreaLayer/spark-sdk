// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import '../error.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they have generic arguments: `parse_json`
// These types are ignored because they are neither used by any `pub` functions nor (for structs and enums) marked `#[frb(unignore)]`: `RestResponse`

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<:: Pin < Box < Future < Output = Result < RestResponse , ServiceConnectivityError > > + Send + 'async_trait > >>>
abstract class PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait
    implements RustOpaqueInterface {}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<ReqwestRestClient>>
abstract class ReqwestRestClient implements RustOpaqueInterface, RestClient {
  @override
  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait> get_({
    required String url,
    Map<String, String>? headers,
  });

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<ReqwestRestClient> newInstance() =>
      BreezSpark.instance.api.breezSdkCommonRestRestClientReqwestRestClientNew();

  @override
  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait> post({
    required String url,
    Map<String, String>? headers,
    String? body,
  });
}

abstract class RestClient {
  /// Makes a GET request and logs on DEBUG.
  /// ### Arguments
  /// - `url`: the URL on which GET will be called
  /// - `headers`: optional headers that will be set on the request
  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait> get_({
    required String url,
    Map<String, String>? headers,
  });

  /// Makes a POST request, and logs on DEBUG.
  /// ### Arguments
  /// - `url`: the URL on which POST will be called
  /// - `headers`: the optional POST headers
  /// - `body`: the optional POST body
  Future<PinBoxFutureOutputResultRestResponseServiceConnectivityErrorAsyncTrait> post({
    required String url,
    Map<String, String>? headers,
    String? body,
  });
}
